{"version":3,"sources":["api/api.js","components/Modal/errorModal.tsx","pages/auth/login/Login.tsx","pages/auth/register/Register.tsx","utils/auth.js","context/userContext.tsx","utils/authPlanner.js","utils/socket.js","components/Modal/NewColumnModal.tsx","utils/stringFormat.js","components/Modal/NewTaskModal.tsx","utils/formatDate.js","components/Modal/InfoModal.tsx","components/Modal/AddUserModal.tsx","components/Modal/DellUserModal.tsx","components/Modal/LeaveModal.tsx","utils/logout.js","components/navHeader/NavHeader.tsx","components/Modal/deleteTaskModal.tsx","components/Modal/TaskModal.tsx","components/task/task.tsx","components/sideBarResp/sideBarResp.tsx","components/sidebar/SideBar.tsx","pages/planner/Planner.tsx","components/Modal/ConfirmDelTaskModal.tsx","components/Modal/RecoveryTaskModal.tsx","pages/info/infoPage.tsx","components/header/header.tsx","components/profileBody/profileBody.tsx","pages/Profile/ProfilePage.tsx","components/Modal/changePassword.tsx","pages/auth/ForgotPassword/Forgot.tsx","utils/ProtectedRouter.tsx","assets/svg/planner.svg","assets/svg/task.svg","assets/shapes/Waves.tsx","pages/homePage/HomePage.tsx","pages/auth/verifyAccount/verifyAccount.tsx","components/newPlannerFormElements/plannerStart.tsx","components/newPlannerFormElements/addParticipants.tsx","components/newPlannerFormElements/defaultColumns.js","components/newPlannerFormElements/NewStage.tsx","components/newPlannerFormElements/FormDone.tsx","components/newPlannerForm/newPlannerForm.tsx","App.jsx","reportWebVitals.ts","index.tsx"],"names":["serverUrl","process","console","log","api","axios","create","baseURL","params","id","localStorage","getItem","headers","authentication","ErrorModal","status","setStatus","info","useState","width","setWidth","useEffect","window","screen","addEventListener","e","target","innerWidth","style","position","top","left","transform","boxShadow","p","closeModal","Modal","open","onClose","Box","sx","className","Button","variant","color","onClick","Login","email","useRef","password","history","useHistory","callErrorModal","setCallErrorModal","errorInfo","setErrorInfo","loading","setloading","current","children","select","to","CircularProgress","alignSelf","marginTop","onSubmit","preventDefault","emailValue","value","trim","passwordValue","post","then","data","error","setItem","token","UserId","el","push","document","location","reload","catch","login","display","alignItems","icon","faEnvelope","TextField","label","ref","fullWidth","faUnlock","type","Register","password2","name","nameValue","passwordValue1","passwordValue2","length","register","faUserAlt","get","UserContext","createContext","UserProvider","userInfoContext","setUserInfoContext","auth","Provider","authPlanner","a","plannerId","socket_Client","io","listenEvent","eventName","callBack","on","emitEvent","emit","RemoveEvent","off","NewColumnModal","column","setColumn","bgcolor","border","onChange","description","desciption","TextAbstract","text","last","substring","lastIndexOf","NewTask","getUsers","Columnid","callError","setcallError","accountableList","setAccountableList","task","setTask","setUsers","accountable","title","map","Tooltip","placement","stringFormat","array","forEach","element","removeItemOnce","faTimesCircle","helperText","option","MenuItem","indexOf","concat","FormatDate","date","check","teste","Date","year","getFullYear","month","getMonth","day","getDate","hours","getHours","minutes","getMinutes","InfoModal","setTimeout","getElementsByClassName","getElementById","taskId","modalTitle","createdBy","createdAt","AddUserModal","userId","permission","user","setUser","callerrorModal","setcallerrorModal","seterrorInfo","justifyContent","DellUserModal","userList","userEml","List","setList","userEmail","setUserEmail","defaultValue","usr","delete","LeaveModal","plannerName","setplannerName","disButton","setDisButton","planner","useContext","planners","disabled","logout","clear","createBrowserHistory","NavHeader","users","getUserTasks","participantEmail","anchorEl","setAnchorEl","usersList","setUsersList","orderganizer","setOrderganizer","adUserModal","callAddUserModal","dellUserModal","callDellUserModal","leavePlannerModal","callLeavePlanner","totalUserList","setTotalUserList","leavePlanner","event","currentTarget","fontSize","Menu","keepMounted","Boolean","us","faCog","DeleteTaskModal","delTaskStatus","setDelTaskStatus","dat","TaskModal","taskInfo","setTaskInfo","showErrorMessage","setShowErrorMessage","showError","setShowError","delStatus","setDelStatus","showDescInput","setShowDescInput","showTitleInput","setShowTitleInput","changestitle","setChangesTitle","changesStatus","setChangesStatus","changesDesc","setChangesDesc","changesAccountables","setChangesAccountables","setShowAccountablesInput","descInp","setDescription","seTitle","accountables","setAccountables","setInitialTaskStatus","padding","updateTaskStatus","stt","_id","CreatedAt","StageId","taskStatus","faPencilAlt","size","tsk","undefined","arr","multiline","put","updatedTask","faTrashAlt","Task","classN","refe","setDate","setDateDetails","callTaskModal","setCallTaskModal","setTaskId","innerRef","draggableProps","dragHandleProps","TaskInfoDetails","SideBarResp","anchor","React","state","setState","toggleDrawer","key","faBars","SwipeableDrawer","onOpen","role","onKeyDown","Divider","SideBar","plannerInfo","showPlanners","setShowPlanners","oldArray","Planner","props","setPlannerId","createNewColumn","setCreateNewColumn","infoModal","setInfoModal","createNewTask","setCreateNewTask","userTasks","GetPlannerInfo","SetGetPlannerInfo","getUserEmail","columnId","setcolumnId","modalMessage","setModalMessage","columns","setColumns","updateTaskPosition","col","initializerPlanner","stages","queryString","hash","start","search","end","match","pln","graphValues","tasksRestored","height","onDragEnd","result","destination","source","droppableId","sourceColumn","destColumn","sourceItems","tasks","destItems","splice","index","removed","copiedItems","onDragEnded","Object","entries","direction","provided","snapshot","droppableProps","isDraggingOver","callModal","coluimnId","faPlus","StageName","item","draggableId","isDragging","placeholder","ConfirmDelTaskModal","infoError","setinfoError","RecoveryTask","Chart","registerables","InfoPage","graph","setId","delList","setDelList","pageInfo","setPageInfo","callConfirmDelTask","setCallConfirmDelTask","callRecoveryTask","setcallRecoveryTask","none","interrupted","priority","progressing","setGraphValues","tasksStatus","deletedTask","ctx","getContext","chart","labels","keys","datasets","values","backgroundColor","hoverOffset","options","responsive","maintainAspectRatio","destroy","formatDate","reduce","b","find","deletedAt","deleteTask","recoverTask","faUndoAlt","header","faSignOutAlt","ProfileBody","setUserInfo","Welcome","background","ProfilePage","ChangePassword","setToken","action","first","second","alert","updatePassword","Forgot","emailCheck","tokenValue","setTokenValue","useToken","setuseToken","callChangePassword","setCallChangePassword","toLowerCase","confirmForgotCode","forgotPassword","ProtectedRouter","isAuth","redirect","Comp","path","setAcrss","render","tabIndex","pathname","from","Waves","xmlns","viewBox","preserveAspectRatio","d","HomePage","src","alt","href","rel","faGithub","faLinkedin","faLaptop","flexWrap","paddingBottom","Confirmation","code","verifyEmail","PlannerStart","formInfo","stage","currentInfo","plaannerName","plannerDescription","setInfo","setCallError","rows","faBackward","faForward","AddParticipants","acess","setAcess","currentEmail","setCurrentEmail","ev","newArray","filter","deletethis","defaultColum","pos","StageDesc","NewStage","step","setStageName","setStageDesc","Default","items","Array","newOrder","FormDone","timer","setTimer","origin","setInterval","NewPlannerForm","startStage","setStartStage","addParticipantsStage","setAddParticipantsStage","newStages","setNewStages","currentStep","setCurrentStep","formComponents","App","verifyAccount","exact","component","Profile","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM"],"mappings":"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","file":"static/js/main.4e1b2ca2.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst serverUrl = process.env.REACT_APP_SERVER_URL?process.env.REACT_APP_SERVER_URL:'http://localhost:8080'\r\nconsole.log(serverUrl)\r\nconst api = axios.create({\r\n    baseURL: serverUrl,\r\n    params: {\r\n        id: localStorage.getItem('UserId')\r\n      }, headers: { authentication: `Bearer ${localStorage.getItem('token')}` }\r\n});\r\n\r\nexport default api;","import React, {useEffect, useState} from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport Button from '@material-ui/core/Button';\r\nimport Modal from '@material-ui/core/Modal';\r\n\r\n\r\n\r\nexport default function ErrorModal({  status, setStatus, info }: any) {\r\n    \r\n    \r\n    const [width, setWidth] = useState<number>(650)\r\n\r\n    useEffect(() => {\r\n        if(window.screen.width < 650){\r\n            setWidth(window.screen.width-10)\r\n        }\r\n    }, [])\r\n\r\n    window.addEventListener('resize',(e: any) => {\r\n        if(e.target.innerWidth < 650){\r\n            setWidth(e.target.innerWidth-20)\r\n        }else{\r\n            setWidth(650)\r\n        }\r\n    })\r\n    \r\n    const style = {\r\n        position: 'absolute' as 'absolute',\r\n        top: '50%',\r\n        left: '50%',\r\n        transform: 'translate(-50%, -50%)',\r\n        width: width,\r\n        boxShadow: 24,\r\n        p: 4,\r\n    };\r\n    function closeModal() {\r\n        setStatus(false)\r\n    }\r\n    \r\n\r\n    return (\r\n        <div>\r\n            <Modal\r\n                open={status}\r\n                onClose={closeModal}\r\n                aria-labelledby=\"modal-modal-title\"\r\n                aria-describedby=\"modal-modal-description\"\r\n            >\r\n                <Box sx={style} className=\"taskModal\">\r\n\r\n                    <h3>Error</h3>\r\n                    <br />\r\n                    <p>{info}</p> \r\n                    <hr /><br />\r\n\r\n                    <div>\r\n                        <Button variant=\"contained\" color=\"primary\" onClick={closeModal}>Ok</Button>\r\n                    </div>\r\n                </Box>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}","import React, { useEffect, useRef, useState } from 'react'\r\nimport './Login.css'\r\n\r\nimport { } from '@fortawesome/fontawesome-svg-core';\r\nimport { faEnvelope, faUnlock } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport { Link } from 'react-router-dom'\r\nimport api from '../../../api/api'\r\n\r\nimport Box from '@material-ui/core/Box';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport ErrorModal from '../../../components/Modal/errorModal';\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nfunction Login() {\r\n    const email = useRef<any>(null);\r\n    const password = useRef<any>(null);\r\n    const history = useHistory();\r\n    const [callErrorModal, setCallErrorModal] =useState<boolean>()\r\n    const [errorInfo, setErrorInfo] =useState<string>()\r\n    const [loading, setloading] = useState<boolean>(false)\r\n\r\n    useEffect(() => {\r\n        email.current?.children[1].children[0]?.select()\r\n    }, [])\r\n\r\n    function login(e: any): void {\r\n        e.preventDefault()\r\n        setloading(true)\r\n        const emailValue = email.current?.children[1].children[0]?.value.trim()\r\n        const passwordValue = password.current?.children[1].children[0]?.value.trim()\r\n        if (emailValue !== '' && passwordValue !== '') {\r\n            api.post('/auth/login', {\r\n                email: emailValue,\r\n                password: passwordValue\r\n            })\r\n                .then((data) => {\r\n                    if(!data.data.error){\r\n                        localStorage.setItem('token', data.data.token)\r\n                        localStorage.setItem('UserId', data.data.UserId)\r\n                    }else{\r\n                        setCallErrorModal(true)\r\n                        setErrorInfo(data.data.error)\r\n                        setloading(false)\r\n                    }\r\n                    return data\r\n                })\r\n                .then((el) => {\r\n                    if(!el.data.error){\r\n                        history.push('/profile')\r\n                        document.location.reload(); \r\n                    }\r\n                })\r\n                .catch((error) => {\r\n                    setCallErrorModal(true)\r\n                    setErrorInfo(error)\r\n                    setloading(false)\r\n                })\r\n        } else {\r\n            setCallErrorModal(true)\r\n            setErrorInfo('some input is empty, please fill all the data.')\r\n            setloading(false)\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"HomePageHeader\">\r\n                <Link to=\"/\">Home Page</Link>\r\n                <div>\r\n                    <Link to=\"/login\">log in</Link>\r\n                    <Link to=\"/register\">register</Link>\r\n                </div>\r\n            </div>\r\n            {!loading? <div className=\"login\">\r\n                <div className=\"form\">\r\n                    <div>\r\n                        <span>Log In</span>\r\n                    </div>\r\n                    <form onSubmit={e => login(e)}>\r\n                        <div className=\"label\">\r\n\r\n                            <Box sx={{ display: 'flex', alignItems: 'flex-end' }} className=\"input\">\r\n                                <FontAwesomeIcon icon={faEnvelope} />\r\n                                <TextField id=\"input-with-sx\" label=\"Email\" variant=\"standard\" ref={email} fullWidth />\r\n                            </Box>\r\n\r\n                        </div>\r\n                        <div className=\"label\">\r\n\r\n                            <Box sx={{ display: 'flex', alignItems: 'flex-end' }} className=\"input\">\r\n                                <FontAwesomeIcon icon={faUnlock} />\r\n                                <TextField id=\"input-with-sx\" label=\"Password\" variant=\"standard\" ref={password} fullWidth type=\"password\"/>\r\n                            </Box>\r\n\r\n                        </div>\r\n\r\n                        <span>\r\n                            <Button className=\"loginButton\" type=\"submit\" variant=\"contained\" color=\"primary\">Login</Button>\r\n                        </span>\r\n                    </form>\r\n                    <span className=\"recoveryPassword\">\r\n                        <span><Link to=\"/verifyAccount\">verify your Account </Link> </span> <br />\r\n                        <span><Link to=\"/forgotpassword\">Forgot your password?</Link></span>\r\n                        \r\n                    </span>\r\n                </div> \r\n            </div> : <CircularProgress style={{alignSelf: 'center', marginTop: '50px'}}/>}\r\n            <ErrorModal status={callErrorModal} setStatus={setCallErrorModal} info={errorInfo}/>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","import React, { useEffect, useState, useRef, useContext } from 'react'\r\nimport '../login/Login.css'\r\nimport RegisterModel from '../../../models/RegisterModel'\r\nimport api from '../../../api/api'\r\nimport auth from '../../../utils/auth'\r\nimport { Link } from 'react-router-dom'\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport Box from '@material-ui/core/Box';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport ErrorModal from '../../../components/Modal/errorModal';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport { faEnvelope, faUnlock, faUserAlt } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nfunction Register() {\r\n    const [userInfo, setUserInfo] = useState<RegisterModel>()\r\n    const email = useRef<any>(null);\r\n    const password = useRef<any>(null);\r\n    const password2 = useRef<any>(null);\r\n    const name = useRef<any>(null);\r\n    const history = useHistory();\r\n\r\n    const [callErrorModal, setCallErrorModal] = useState<boolean>()\r\n    const [errorInfo, setErrorInfo] = useState<string>()\r\n    const [loading, setloading] = useState<boolean>(false)\r\n\r\n    function register(e: any) {\r\n        e.preventDefault()\r\n        setloading(true)\r\n        const emailValue = email.current?.children[1].children[0]?.value.trim()\r\n        const nameValue = name.current?.children[1].children[0]?.value.trim()\r\n        const passwordValue1 = password.current?.children[1].children[0]?.value.trim()\r\n        const passwordValue2 = password2.current?.children[1].children[0]?.value.trim()\r\n\r\n        if (\r\n            emailValue === '' &&\r\n            nameValue === '' &&\r\n            passwordValue1 === '' &&\r\n            passwordValue2 === '') {\r\n            setCallErrorModal(true)\r\n            setErrorInfo('please fill in the details below.')\r\n            setloading(false)\r\n            return\r\n        }\r\n        if (\r\n            emailValue === '' ||\r\n            nameValue === '' ||\r\n            passwordValue1 === '' ||\r\n            passwordValue2 === '') {\r\n            setCallErrorModal(true)\r\n            setErrorInfo('some input is empty, please fill all the data.')\r\n            setloading(false)\r\n            return\r\n        } if (passwordValue1 !== passwordValue2) {\r\n            setCallErrorModal(true)\r\n            setErrorInfo('passwords are not compatible.')\r\n            setloading(false)\r\n            return\r\n        }\r\n        if (passwordValue1.length < 3 || passwordValue1.length > 8) {\r\n            setCallErrorModal(true)\r\n            setErrorInfo('must be greater than 3 characters and lower than 8.')\r\n            setloading(false)\r\n            return\r\n        }\r\n\r\n        api.post('/auth/register', {\r\n            email: emailValue,\r\n            password: passwordValue1,\r\n            name: nameValue\r\n        })\r\n            .then((data) => {\r\n                if (!data.data.error) {\r\n                    history.push('/verifyAccount')\r\n                    document.location.reload();\r\n                    setloading(false)\r\n                } else {\r\n                    setCallErrorModal(true)\r\n                    setErrorInfo(data.data.error)\r\n                    setloading(false)\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                setCallErrorModal(true)\r\n                setErrorInfo(error)\r\n                setloading(false)\r\n            })\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"HomePageHeader\">\r\n                <Link to=\"/\">Home Page</Link>\r\n                <div>\r\n                    <Link to=\"/login\">log in</Link>\r\n                    <Link to=\"/register\">register</Link>\r\n                </div>\r\n            </div>\r\n            {!loading ? <div className=\"login\">\r\n                <div className=\"form\">\r\n                    <div>\r\n                        <span>Register</span>\r\n                    </div>\r\n\r\n\r\n                    <form onSubmit={e => register(e)}>\r\n                        <div className=\"label\">\r\n                            <Box sx={{ display: 'flex', alignItems: 'flex-end' }} className=\"input\">\r\n                                <FontAwesomeIcon icon={faEnvelope} />\r\n                                <TextField id=\"input-with-sx\" label=\"Email\" variant=\"standard\" ref={email} fullWidth type=\"email\" />\r\n                            </Box>\r\n                        </div>\r\n\r\n                        <div className=\"label\">\r\n                            <Box sx={{ display: 'flex', alignItems: 'flex-end' }} className=\"input\">\r\n                                <FontAwesomeIcon icon={faUserAlt} />\r\n                                <TextField id=\"input-with-sx\" label=\"Name\" variant=\"standard\" ref={name} fullWidth />\r\n                            </Box>\r\n                        </div>\r\n                        <div className=\"label\">\r\n                            <Box sx={{ display: 'flex', alignItems: 'flex-end' }} className=\"input\">\r\n                                <FontAwesomeIcon icon={faUnlock} />\r\n                                <TextField id=\"input-with-sx\" label=\"Password\" variant=\"standard\" ref={password} fullWidth type=\"password\" />\r\n                            </Box>\r\n                        </div>\r\n                        <div className=\"label\">\r\n                            <Box sx={{ display: 'flex', alignItems: 'flex-end' }} className=\"input\">\r\n                                <FontAwesomeIcon icon={faUnlock} />\r\n                                <TextField id=\"input-with-sx\" label=\"Repeat Password\" variant=\"standard\" ref={password2} fullWidth type=\"password\" />\r\n                            </Box>\r\n                        </div>\r\n                        <br />\r\n                        <Button className=\"loginButton\" type=\"submit\" variant=\"contained\" color=\"primary\">Register</Button>\r\n                    </form>\r\n                </div>\r\n            </div> : <CircularProgress style={{ alignSelf: 'center', marginTop: '50px' }} />}\r\n            <ErrorModal status={callErrorModal} setStatus={setCallErrorModal} info={errorInfo} />\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Register\r\n","import api from '../api/api'\r\n\r\nexport default  api.get('/auth',{\r\n    params: {\r\n      id: localStorage.getItem('UserId')\r\n    }, headers: { authentication: `Bearer ${localStorage.getItem('token')}` }\r\n  })\r\n  ","import { createContext, useState, useEffect } from \"react\";\r\nimport plannerModel from '../models/PlannerModel'\r\n\r\nimport auth from '../utils/auth'\r\nexport const UserContext = createContext({});\r\n\r\nexport default function UserProvider({ children }: any) {\r\n  const [userInfoContext, setUserInfoContext] = useState<plannerModel>();\r\n\r\n  useEffect(() => {\r\n    auth\r\n    .then((data) => {\r\n      if(!data.data.error){\r\n        setUserInfoContext(data.data)\r\n      }else{\r\n      }\r\n    })\r\n    .then(() => {\r\n    })\r\n  }, [])\r\n\r\n  return (\r\n    <UserContext.Provider\r\n      value={{\r\n        userInfoContext,\r\n        setUserInfoContext\r\n      }}\r\n    >\r\n      {children}\r\n    </UserContext.Provider>\r\n  );\r\n}","import api from '../api/api'\r\n\r\n\r\nexport default async function  authPlanner  (id)  {\r\n    return api.post('/planner/auth',{\r\n        params: {\r\n          id: localStorage.getItem('UserId'),\r\n          plannerId: id\r\n        }, headers: { authentication: `Bearer ${localStorage.getItem('token')}` }\r\n      })\r\n}\r\n","import * as io from 'socket.io-client'\r\n\r\nconst socket_Client = io.io(process.env.REACT_APP_SERVER_URL?process.env.REACT_APP_SERVER_URL+\"/\":'http://localhost:8080/')\r\n\r\nexport function listenEvent(eventName, callBack){\r\n    return socket_Client.on(eventName, callBack)\r\n  }\r\n\r\nexport function emitEvent(eventName, data){\r\n    return socket_Client.emit(eventName, data)\r\n  }\r\nexport function RemoveEvent(eventName, a){\r\n    return socket_Client.off(eventName)\r\n  }\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport Button from '@material-ui/core/Button';\r\nimport Modal from '@material-ui/core/Modal';\r\n\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport api from '../../api/api';\r\n\r\n\r\nconst style = {\r\n    position: 'absolute' as 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: 600,\r\n    bgcolor: 'background.paper',\r\n    border: '2px solid #000',\r\n    boxShadow: 24,\r\n    p: 4,\r\n};\r\n\r\ninterface column {\r\n    name?: string,\r\n    description?: string\r\n}\r\nexport default function NewColumnModal({ status, setStatus ,plannerId }: any) {\r\n\r\n    const [column, setColumn] = useState<column>()\r\n    const [width, setWidth] = useState<number>(650)\r\n\r\n    useEffect(() => {\r\n        if(window.screen.width < 650){\r\n            setWidth(window.screen.width-10)\r\n        }\r\n    }, [])\r\n    \r\n\r\n    window.addEventListener('resize',(e: any) => {\r\n        if(e.target.innerWidth < 650){\r\n            setWidth(e.target.innerWidth-20)\r\n        }else{\r\n            setWidth(650)\r\n        }\r\n    })\r\n\r\n    const style = {\r\n        position: 'absolute' as 'absolute',\r\n        top: '50%',\r\n        left: '50%',\r\n        transform: 'translate(-50%, -50%)',\r\n        width: width,\r\n        bgcolor: 'background.paper',\r\n        border: '2px solid #000',\r\n        boxShadow: 24,\r\n        p: 4,\r\n    };\r\n    function closeModal() {\r\n        setStatus(false)\r\n    }\r\n    function newColumn() {\r\n\r\n        api.post('/planner/newColumn', {\r\n            params:{\r\n                name: column?.name,\r\n                desciption: column?.description,\r\n                plannerId: plannerId\r\n            }\r\n        })\r\n        .then((data) => {\r\n        })\r\n    }\r\n    useEffect(() => {\r\n        \r\n    }, [])\r\n    return (\r\n        <div>\r\n            <Modal\r\n                open={status}\r\n                onClose={() => setStatus(false)}\r\n                aria-labelledby=\"modal-modal-title\"\r\n                aria-describedby=\"modal-modal-description\"\r\n            >\r\n                <Box sx={style} >\r\n\r\n                    <h3>New Column</h3>\r\n\r\n                    <div>\r\n                        <TextField id=\"name\" label=\"name\" variant=\"outlined\"\r\n                            onChange={(e) => setColumn({\r\n                                description: column?.description,\r\n                                name: e.target.value\r\n                            })}\r\n                        />\r\n                        <TextField id=\"description\" label=\"description\" variant=\"outlined\"\r\n                            onChange={(e) => setColumn({\r\n                                name: column?.name,\r\n                                description: e.target.value\r\n                            })} />\r\n                    </div>\r\n\r\n                    <hr /><br />\r\n                    <div>\r\n                        <Button variant=\"contained\" color=\"primary\" onClick={newColumn}>Confirm</Button>\r\n                        <Button variant=\"contained\" color=\"secondary\" onClick={closeModal} >cancel</Button>\r\n                    </div>\r\n                </Box>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}","export default function TextAbstract(text, length) {\r\n    if (text == null) {\r\n        return \"\";\r\n    }\r\n    if (text.length <= length) {\r\n        return text;\r\n    }\r\n    text = text.substring(0, length);\r\n    const last = text.lastIndexOf(\" \");\r\n    if(last !== -1){\r\n        return text.substring(0, last) + \"...\";\r\n    }else{\r\n        return text.substring(0, length) + '...'\r\n    }\r\n}","import React, { useState, useEffect } from 'react';\r\nimport './Modal.css'\r\nimport Box from '@material-ui/core/Box';\r\nimport Button from '@material-ui/core/Button';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\nimport ErrorModal from './errorModal';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTimesCircle } from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport logout from '../../utils/logout'\r\nimport stringFormat from '../../utils/stringFormat'\r\n\r\nimport api from '../../api/api'\r\n\r\n\r\n\r\nexport default function NewTask({ getUsers, status, setStatus, Columnid, plannerId }: any) {\r\n\r\n    const [callError, setcallError] = useState<boolean>(false);\r\n    const [errorInfo, setErrorInfo] = useState<any>('');\r\n    const [accountableList, setAccountableList] = useState<any>([]);\r\n    const [width, setWidth] = useState<number>(650)\r\n\r\n    useEffect(() => {\r\n        if (window.screen.width < 650) {\r\n            setWidth(window.screen.width - 20)\r\n        }\r\n    }, [])\r\n\r\n    window.addEventListener('resize', (e: any) => {\r\n        if (e.target.innerWidth < 650) {\r\n            setWidth(e.target.innerWidth - 20)\r\n        } else {\r\n            setWidth(650)\r\n        }\r\n    })\r\n\r\n    const style = {\r\n        position: 'absolute' as 'absolute',\r\n        top: '50%',\r\n        left: '50%',\r\n        transform: 'translate(-50%, -50%)',\r\n        width: width,\r\n        bgcolor: 'background.paper',\r\n        border: '2px solid #000',\r\n        boxShadow: 24,\r\n        p: 4,\r\n    };\r\n\r\n    interface Task {\r\n        title?: string,\r\n        description?: string,\r\n        accountable?: [string]\r\n    }\r\n    interface User {\r\n        name?: string,\r\n        email?: string,\r\n        _id?: string\r\n    }\r\n\r\n\r\n\r\n    const [task, setTask] = useState<Task>()\r\n    const [users, setUsers] = useState<[User]>()\r\n\r\n\r\n    function closeModal() {\r\n        setStatus(false)\r\n    }\r\n    function createNewTask() {\r\n        api.post('/task/newTask', {\r\n            params: {\r\n                title: task?.title,\r\n                desciption: task?.description,\r\n                accountable: accountableList,\r\n                plannerId: plannerId,\r\n                Columnid: Columnid\r\n            }\r\n        }).then((data) => {\r\n            if (data.data.error) {\r\n                setcallError(true)\r\n                setErrorInfo(data.data.error)\r\n            } else {\r\n                setTask({})\r\n                setUsers([{}])\r\n                setAccountableList([])\r\n                closeModal()\r\n            }\r\n        })\r\n            .catch((error: any) => {\r\n                setErrorInfo(error)\r\n            })\r\n\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        setUsers(getUsers)\r\n    }, [getUsers])\r\n\r\n\r\n    function removeItemOnce(value: any) {\r\n\r\n        const array: any = []\r\n        accountableList.forEach((element: any) => {\r\n            if (element === value) {\r\n                return\r\n            } else {\r\n                array.push(element)\r\n                setAccountableList(array)\r\n            }\r\n        })\r\n        if (accountableList.length === 1) {\r\n            setAccountableList([])\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Modal\r\n                open={status}\r\n                onClose={closeModal}\r\n                aria-labelledby=\"modal-modal-title\"\r\n                aria-describedby=\"modal-modal-description\"\r\n            >\r\n                <Box sx={style} className=\"taskModal\" >\r\n\r\n                    <h3 >New Task</h3>\r\n                    <br />\r\n                    <div>\r\n                        <div className=\"inputs\">\r\n\r\n                            <TextField id=\"tasktitle\" label=\"title\" variant=\"outlined\"\r\n                                onChange={(e) => setTask({\r\n                                    description: task?.description,\r\n                                    accountable: task?.accountable,\r\n                                    title: e.target.value\r\n                                })} />\r\n                            <TextField id=\"taskDesk\" label=\"Description\" variant=\"outlined\"\r\n                                onChange={(e) => setTask({\r\n                                    title: task?.title,\r\n                                    accountable: task?.accountable,\r\n                                    description: e.target.value\r\n                                })}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"accountableList\">{accountableList.map((el: any) => <div >\r\n                            <Tooltip title={el.length > 12 ? el : ''} placement=\"top-end\">\r\n                                <span className=\"accountable\">\r\n                                    <span>{stringFormat(el, 10)}</span>&nbsp;&nbsp; <span className={el} onClick={() => removeItemOnce(el)}><FontAwesomeIcon icon={faTimesCircle}></FontAwesomeIcon></span>\r\n                                </span>\r\n                            </Tooltip>\r\n                        </div>\r\n                        )}</div>\r\n\r\n                        <TextField select label=\"accountable\" value={task?.accountable} fullWidth\r\n                            helperText=\"Please select the accountable for this task.\" >\r\n                            {getUsers?.map((option: any) => (\r\n                                <MenuItem\r\n                                    onClick={(e: any) => {\r\n                                        if (accountableList?.indexOf(option.email) === -1) {\r\n                                            setAccountableList(accountableList.concat(option.email))\r\n                                        } else {\r\n                                            return\r\n                                        }\r\n                                    }}>\r\n                                    {option.name}\r\n                                </MenuItem>\r\n                            ))}\r\n                        </TextField>\r\n                    </div>\r\n\r\n                    <br />\r\n                    <div className=\"taskModalButtons\">\r\n                        <div>\r\n                            <Button variant=\"contained\" color=\"primary\" onClick={createNewTask}>Confirm</Button>\r\n                            <Button variant=\"contained\" color=\"secondary\" onClick={closeModal} >cancel</Button>\r\n                        </div>\r\n                        <div></div>\r\n                    </div>\r\n                </Box>\r\n            </Modal>\r\n            <ErrorModal status={callError} setStatus={setcallError} info={errorInfo} />\r\n\r\n        </div>\r\n    );\r\n}","export default function FormatDate(date, check){\r\n    const teste = new Date(date)\r\n    const year =  (teste.getFullYear()<10?'0':'') + teste.getFullYear() \r\n    const month =  (teste.getMonth()<10?'0':'') + teste.getMonth() \r\n    const day =   (teste.getDate()<10?'0':'') + teste.getDate()\r\n    const hours =   (teste.getHours()<10?'0':'') + teste.getHours()\r\n    const minutes = (teste.getMinutes()<10?'0':'') + teste.getMinutes()\r\n    if(!check){\r\n        return [`${year}-${month}-${day}`, `${hours}:${minutes}`, ]\r\n    }else{\r\n        return `${year}-${month}-${day}`\r\n    }\r\n}","import React, {useState, useEffect} from 'react';\r\n\r\nimport Box from '@material-ui/core/Box';\r\nimport Button from '@material-ui/core/Button';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport FormatDate from '../../utils/formatDate'\r\n\r\n\r\n\r\n\r\n\r\nexport default function InfoModal({  status, setStatus, info }: any) {\r\n    \r\n\r\n    const [width, setWidth] = useState<number>(650)\r\n\r\n    useEffect(() => {\r\n        if(window.screen.width < 650){\r\n            setWidth(window.screen.width-10)\r\n        }\r\n    }, [])\r\n\r\n    window.addEventListener('resize',(e: any) => {\r\n        if(e.target.innerWidth < 650){\r\n            setWidth(e.target.innerWidth-20)\r\n        }else{\r\n            setWidth(650)\r\n        }\r\n    })\r\n\r\n    \r\n    const style = {\r\n        position: 'absolute' as 'absolute',\r\n        top: '50%',\r\n        left: '50%',\r\n        transform: 'translate(-50%, -50%)',\r\n        width: width,\r\n        bgcolor: 'background.paper',\r\n        border: '2px solid #000',\r\n        boxShadow: 24,\r\n        p: 4,\r\n    };\r\n    function closeModal() {\r\n        setStatus(false)\r\n        setTimeout(() => {\r\n            const element : any = document.getElementsByClassName(info?.Columnid)\r\n            element[0].children[0].style.border = \"none\"\r\n\r\n            const task : any = document.getElementById(info?.taskId)\r\n            task.style.border = \"none\"\r\n            \r\n        }, 3000);\r\n    }\r\n    \r\n\r\n    return (\r\n        <div>\r\n            <Modal\r\n                open={status}\r\n                onClose={closeModal}\r\n                aria-labelledby=\"modal-modal-title\"\r\n                aria-describedby=\"modal-modal-description\"\r\n            >\r\n                <Box  sx={style}>\r\n\r\n                    <h3>{info?.modalTitle}</h3>\r\n                    <br />\r\n                    <p><strong>{info?.createdBy}</strong> have created the <strong>{info?.title}</strong> Task at {FormatDate(info?.createdAt)[1]}</p> \r\n                    <hr /><br />\r\n\r\n                    <div>\r\n                        <Button variant=\"contained\" color=\"primary\" onClick={closeModal}>Ok</Button>\r\n                    </div>\r\n                </Box>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}","import React, { useState, useEffect } from 'react';\r\nimport './Modal.css'\r\nimport Box from '@material-ui/core/Box';\r\nimport Button from '@material-ui/core/Button';\r\nimport Modal from '@material-ui/core/Modal';\r\n\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport api from '../../api/api';\r\n\r\nimport ErrorModal from './errorModal';\r\n\r\n\r\nexport default function AddUserModal({ status, setStatus, plannerId, userId }: any) {\r\n\r\n    const [user, setUser] = useState<any>({\r\n        permission: 'intermediate'\r\n    })\r\n    const [callerrorModal, setcallerrorModal] = useState<boolean>()\r\n    const [errorInfo, seterrorInfo] = useState<any>()\r\n    const [width, setWidth] = useState<number>(650)\r\n\r\n    useEffect(() => {\r\n        if(window.screen.width < 650){\r\n            setWidth(window.screen.width-10)\r\n        }\r\n    }, [])\r\n\r\n    window.addEventListener('resize',(e: any) => {\r\n        if(e.target.innerWidth < 650){\r\n            setWidth(e.target.innerWidth-20)\r\n        }else{\r\n            setWidth(650)\r\n        }\r\n    })\r\n\r\n    const style = {\r\n        position: 'absolute' as 'absolute',\r\n        top: '50%',\r\n        left: '50%',\r\n        transform: 'translate(-50%, -50%)',\r\n        width: width,\r\n        bgcolor: 'background.paper',\r\n        border: '2px solid #000',\r\n        boxShadow: 24,\r\n        p: 4,\r\n    };\r\n    \r\n    function closeModal() {\r\n        setStatus(false)\r\n    }\r\n    function AddUser() {\r\n        if(user?.email?.trim() == ''){\r\n            setcallerrorModal(true)\r\n            seterrorInfo('email its empty.')\r\n            return\r\n        }\r\n        api.post('/planner/newUser', {\r\n            params: {\r\n                user,\r\n                userId: userId,\r\n                plannerId: plannerId\r\n            }\r\n        })\r\n            .then((data) => {\r\n                if(data.data.error){\r\n                    setcallerrorModal(true)\r\n                    seterrorInfo(data.data.error)\r\n                }else{\r\n                    closeModal()\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                setcallerrorModal(true)\r\n                seterrorInfo(error)\r\n            })\r\n    }\r\n    useEffect(() => {\r\n\r\n    }, [])\r\n    return (\r\n        <div>\r\n            <Modal\r\n                open={status}\r\n                onClose={() => setStatus(false)}\r\n                aria-labelledby=\"modal-modal-title\"\r\n                aria-describedby=\"modal-modal-permission\"\r\n            >\r\n                <Box sx={style}  className='taskModal'>\r\n\r\n                    <h2>New user</h2>\r\n                    <br />\r\n                    <div className=\"newUserModalHeader\">\r\n                        <TextField id=\"name\" label=\"email\" variant=\"outlined\" type=\"email\"\r\n                            onChange={(e) => setUser({\r\n                                permission: user?.permission,\r\n                                email: e.target.value\r\n                            })}\r\n                        />\r\n\r\n                        <TextField select label={user?.permission+ ' permission'} >\r\n                            <MenuItem onClick={(e) => setUser({\r\n                                email: user?.email,\r\n                                permission: 'total'\r\n                            })}>\r\n                                total\r\n                            </MenuItem>\r\n                            <MenuItem onClick={(e) => setUser({\r\n                                email: user?.email,\r\n                                permission: 'intermediate'\r\n                            })}>\r\n                                intermediate\r\n                            </MenuItem>\r\n                            <MenuItem onClick={(e) => setUser({\r\n                                email: user?.email,\r\n                                permission: 'observer'\r\n                            })}>\r\n                                observer\r\n                            </MenuItem>\r\n\r\n                        </TextField>\r\n\r\n                    </div>\r\n\r\n                    <br />\r\n                    <div style={{display:'flex', justifyContent: 'space-around'}}>\r\n                        <Button variant=\"contained\" color=\"primary\" onClick={AddUser}>Confirm</Button>\r\n                        <Button variant=\"contained\" color=\"secondary\" onClick={closeModal} >cancel</Button>\r\n                    </div>\r\n                </Box>\r\n            </Modal>\r\n            <ErrorModal status={callerrorModal} setStatus={setcallerrorModal} info={errorInfo}/>\r\n        </div>\r\n    );\r\n}","import React, { useState, useEffect } from 'react';\r\nimport './Modal.css'\r\nimport Box from '@material-ui/core/Box';\r\nimport Button from '@material-ui/core/Button';\r\nimport Modal from '@material-ui/core/Modal';\r\n\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport api from '../../api/api';\r\n\r\nimport ErrorModal from './errorModal';\r\n\r\n\r\n\r\nexport default function DellUserModal({ status, setStatus, plannerId, userId, userList, userEml }: any) {\r\n\r\n    const [user, setUser] = useState<any>('')\r\n    const [callerrorModal, setcallerrorModal] = useState<boolean>()\r\n    const [errorInfo, seterrorInfo] = useState<any>()\r\n    const [List, setList] = useState<any>()\r\n    const [userEmail, setUserEmail] = useState<any>()\r\n    const [width, setWidth] = useState<number>(650)\r\n\r\n    useEffect(() => {\r\n        if(window.screen.width < 650){\r\n            setWidth(window.screen.width-20)\r\n        }\r\n    }, [])\r\n\r\n    window.addEventListener('resize',(e: any) => {\r\n        if(e.target.innerWidth < 650){\r\n            setWidth(e.target.innerWidth-20)\r\n        }else{\r\n            setWidth(650)\r\n        }\r\n    })\r\n\r\n    const style = {\r\n        position: 'absolute' as 'absolute',\r\n        top: '50%',\r\n        left: '50%',\r\n        transform: 'translate(-50%, -50%)',\r\n        width: width,\r\n        bgcolor: 'background.paper',\r\n        border: '2px solid #000',\r\n        boxShadow: 24,\r\n        p: 4,\r\n    };\r\n\r\n    function closeModal() {\r\n        setStatus(false)\r\n    }\r\n    function RemoveUser() {\r\n        if(user?.trim() == ''){\r\n            setcallerrorModal(true)\r\n            seterrorInfo('email its empty.')\r\n            return\r\n        }\r\n        api.delete('/planner/removeUser', {\r\n            params: {\r\n                user,\r\n                userId: userId,\r\n                plannerId: plannerId\r\n            }\r\n        })\r\n            .then((data) => {\r\n                if (data.data.error) {\r\n                    setcallerrorModal(true)\r\n                    seterrorInfo(data.data.error)\r\n                }else{\r\n                    closeModal()\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                setcallerrorModal(true)\r\n                seterrorInfo(error)\r\n            })\r\n    }\r\n    useEffect(() => {\r\n        const teste: any = []\r\n        userList?.forEach((element: any) => {\r\n            if (element?.email !== userEml) {\r\n                teste.push(element)\r\n            }\r\n        });\r\n        setList(teste)\r\n        setUserEmail(userEmail)\r\n    }, [userList, userEml])\r\n    return (\r\n        <div>\r\n            <Modal\r\n                open={status}\r\n                onClose={() => setStatus(false)}\r\n                aria-labelledby=\"modal-modal-title\"\r\n                aria-describedby=\"modal-modal-permission\"\r\n            >\r\n                <Box sx={style} className='taskModal'>\r\n\r\n                    <h3>Remove User</h3>\r\n\r\n                    <div className=\"newUserModalHeader\">\r\n\r\n                        <TextField select defaultValue={user} label={user ? user : 'User'} style={{ width: '100%' }} >\r\n                            {List?.map((usr: any) => {\r\n                                return <MenuItem onClick={(e) => setUser(usr.email)}>\r\n                                    {usr.email}\r\n                                </MenuItem>\r\n\r\n                            })}\r\n                        </TextField>\r\n\r\n                    </div>\r\n\r\n                    <br />\r\n                    <div className=\"taskModalButtons\">\r\n                        <div>\r\n                            <Button variant=\"contained\" color=\"primary\" onClick={RemoveUser}>Confirm</Button>\r\n                            <Button variant=\"contained\" color=\"secondary\" onClick={closeModal} >cancel</Button>\r\n                        </div>\r\n                        <div></div>\r\n                    </div>\r\n                </Box>\r\n            </Modal>\r\n            <ErrorModal status={callerrorModal} setStatus={setcallerrorModal} info={errorInfo} />\r\n        </div>\r\n    );\r\n}","import React, { useEffect, useState, useRef, useContext } from 'react'\r\n\r\nimport Box from '@material-ui/core/Box';\r\nimport Button from '@material-ui/core/Button';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { UserContext } from '../../context/userContext'\r\nimport api from '../../api/api';\r\nimport ErrorModal from './errorModal';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n\r\nexport default function LeaveModal({ status, setStatus, plannerId }: any) {\r\n\r\n\r\n    const [width, setWidth] = useState<number>(650)\r\n    const [plannerName, setplannerName] = useState<string>()\r\n    const [disButton, setDisButton] = useState<boolean>(true)\r\n    const [callError, setcallError] = useState<boolean>()\r\n    const [errorInfo, setErrorInfo] = useState<string>()\r\n    const planner = useRef<any>(null);\r\n    const history = useHistory();\r\n\r\n    const { userInfoContext, setUserInfoContext } = useContext<any>(UserContext)\r\n\r\n    useEffect(() => {\r\n        if (window.screen.width < 650) {\r\n            setWidth(window.screen.width - 10)\r\n        }\r\n        userInfoContext.planners.forEach((el: any) => {\r\n            if (el.plannerId === plannerId) {\r\n                setplannerName(el.name)\r\n            }\r\n        })\r\n\r\n    }, [userInfoContext, plannerId])\r\n\r\n    window.addEventListener('resize', (e: any) => {\r\n        if (e.target.innerWidth < 650) {\r\n            setWidth(e.target.innerWidth - 20)\r\n        } else {\r\n            setWidth(650)\r\n        }\r\n    })\r\n\r\n\r\n    function confirmUserLeave() {\r\n        const pln = planner.current?.children[0]?.children[0].value.trim()\r\n        if (pln == plannerName) {\r\n            api.post('/user/leavePlaner', { \r\n                email: userInfoContext?.email,\r\n                userId: localStorage.getItem(\"UserId\"),\r\n                plannerId }\r\n                )\r\n                .then((data: any) => {\r\n                    if(data.data.error){\r\n                        setErrorInfo(data.data.error)\r\n                        setcallError(true)\r\n                    }else{\r\n                        history.push('/profile')\r\n                        document.location.reload();\r\n                    }\r\n                })\r\n\r\n        }\r\n    }\r\n    const style = {\r\n        position: 'absolute' as 'absolute',\r\n        top: '50%',\r\n        left: '50%',\r\n        transform: 'translate(-50%, -50%)',\r\n        width: width,\r\n        bgcolor: 'background.paper',\r\n        border: '2px solid #000',\r\n        boxShadow: 24,\r\n        p: 4,\r\n    };\r\n    function closeModal() {\r\n        setStatus(false)\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Modal\r\n                open={status}\r\n                onClose={closeModal}\r\n                aria-labelledby=\"modal-modal-title\"\r\n                aria-describedby=\"modal-modal-description\"\r\n            >\r\n                <Box sx={style}>\r\n\r\n                    <h3>LEAVING PLANNER</h3>\r\n                    <br />\r\n                    <p> are you sure that you want to abandon this planner, you will lost the acess to the tasks, graphics, users and stages. the only way to get back the acess, is beeing added again.</p>\r\n                    <br />\r\n                    <br />\r\n                    <h2>write the name of the planner: <span style={{ color: 'red' }}>{plannerName}</span></h2>\r\n                    <br />\r\n                    <TextField id=\"input-with-sx\" variant=\"standard\" ref={planner} fullWidth type=\"planner\"\r\n                     onChange={() => {\r\n                                setDisButton(planner.current?.children[0]?.children[0].value.trim() == plannerName? false : true)\r\n                    }}/>\r\n                    <br />\r\n                    <br /><br /><br /><br />\r\n                    <div style={{display: 'flex', justifyContent: 'space-around'}}>\r\n                        <Button variant=\"contained\" color=\"secondary\" onClick={confirmUserLeave} disabled={disButton}>Leave</Button>\r\n                        <Button variant=\"contained\" color=\"primary\" onClick={closeModal}>Cancel</Button>\r\n                    </div>\r\n                </Box>\r\n            </Modal>\r\n            <ErrorModal status={callError} setStatus={setcallError} info={errorInfo} />\r\n\r\n        </div>\r\n    );\r\n}","import { createBrowserHistory } from 'history'\r\n\r\nfunction logout (){\r\n    localStorage.clear()\r\n    createBrowserHistory().push('/planner-task/#/')\r\n    document.location.reload();\r\n}\r\nexport default logout","import React, { useEffect, useState } from 'react'\r\nimport './navHeader.css'\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n\r\nimport AddUserModal from '../Modal/AddUserModal'\r\nimport DellUserModal from '../Modal/DellUserModal';\r\nimport LeaveModal from '../Modal/LeaveModal';\r\n\r\nimport api from '../../api/api'\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCog,  faUserAlt } from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport logout from '../../utils/logout';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { listenEvent } from '../../utils/socket'\r\n\r\nfunction NavHeader({  users , userId, plannerId, userEmail, planner, getUserTasks, participantEmail }: any) {\r\n    const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\r\n    const [usersList, setUsersList] = useState<null | HTMLElement>(null);\r\n    const [orderganizer, setOrderganizer] = useState<any>();\r\n    const [adUserModal, callAddUserModal] = useState<boolean>();\r\n    const [dellUserModal, callDellUserModal] = useState<boolean>();\r\n    const [leavePlannerModal, callLeavePlanner] = useState<boolean>();\r\n    const [totalUserList, setTotalUserList] = useState<any>();\r\n\r\n\r\n    useEffect(() => {\r\n        setTotalUserList(users)\r\n            setOrderganizer([\r\n                <MenuItem onClick={() => callAddUserModal(true)}> add new User </MenuItem>,\r\n                <MenuItem onClick={() => callDellUserModal(true)}> remove User </MenuItem>,\r\n                <MenuItem onClick={leavePlanner}> <span style={{color: 'red'}}>Leave Planner</span> </MenuItem>,\r\n                <MenuItem> <Link to={`/planner/id=${plannerId}/info`}> Info</Link></MenuItem>,\r\n            ])\r\n    }, [plannerId, users])\r\n\r\n    const leavePlanner = () => {\r\n        callLeavePlanner(true)\r\n    };\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n    const handleUsersList = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n        setUsersList(event.currentTarget);\r\n    };\r\n\r\n    const handleCloseUsersList = () => {\r\n        setUsersList(null);\r\n    };\r\n\r\n    const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    listenEvent('currentUsers', (usersList: any) => {\r\n        setTotalUserList(usersList)\r\n    })\r\n\r\n    function setUserTasks(user: any){\r\n        if(planner){\r\n            getUserTasks(true)\r\n            participantEmail(user?.email)\r\n\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"navHeader\">\r\n            \r\n            <p><Link  to={'../../profile'}>Profile</Link></p>\r\n            <div>\r\n                <span>\r\n                    <Button aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleUsersList}>\r\n                        <FontAwesomeIcon icon={faUserAlt} style={{ fontSize: \"23px\" }} />\r\n                    </Button>\r\n                    <Menu\r\n                        id=\"simple-menu\"\r\n                        anchorEl={usersList}\r\n                        keepMounted\r\n                        open={Boolean(usersList)}\r\n                        onClose={handleCloseUsersList}\r\n                    >\r\n                        {totalUserList?.map((us: any) => {\r\n                            return <MenuItem onClick={() => setUserTasks(us)}>{us.name}</MenuItem>\r\n                        })}\r\n                    </Menu>\r\n                </span>\r\n                <span>\r\n                    <Button aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick}>\r\n                        <FontAwesomeIcon icon={faCog} style={{ fontSize: \"23px\" }} className=\"rotating\" />\r\n                    </Button>\r\n                    <Menu\r\n                        id=\"simple-menu\"\r\n                        anchorEl={anchorEl}\r\n                        keepMounted\r\n                        open={Boolean(anchorEl)}\r\n                        onClose={handleClose}\r\n                    >\r\n                        {orderganizer}\r\n                        <MenuItem onClick={logout}>Logout</MenuItem>\r\n                    </Menu>\r\n                </span>\r\n            <AddUserModal  status={adUserModal} setStatus={callAddUserModal} plannerId={plannerId} userId={userId}/> \r\n            <DellUserModal  status={dellUserModal} setStatus={callDellUserModal} plannerId={plannerId} userList={totalUserList} userId={userId} userEml={userEmail}/> \r\n            <LeaveModal  status={leavePlannerModal} setStatus={callLeavePlanner} plannerId={plannerId}/> \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NavHeader\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nimport Box from '@material-ui/core/Box';\r\nimport Button from '@material-ui/core/Button';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport api from '../../api/api'\r\nimport ErrorModal from './errorModal'\r\n\r\n\r\n\r\n\r\nexport default function DeleteTaskModal({ delTaskStatus, taskId, setDelTaskStatus }: any) {\r\n\r\n    const [callError, setcallError] = useState<boolean>(false);\r\n    const [errorInfo, setErrorInfo] = useState<any>('' );\r\n    const [width, setWidth] = useState<number>(650)\r\n\r\n    useEffect(() => {\r\n        if(window.screen.width < 650){\r\n            setWidth(window.screen.width-10)\r\n        }\r\n    }, [])\r\n    \r\n\r\n    window.addEventListener('resize',(e: any) => {\r\n        if(e.target.innerWidth < 650){\r\n            setWidth(e.target.innerWidth-20)\r\n        }else{\r\n            setWidth(650)\r\n        }\r\n    })\r\n\r\n    const style = {\r\n        position: 'absolute' as 'absolute',\r\n        top: '50%',\r\n        left: '50%',\r\n        transform: 'translate(-50%, -50%)',\r\n        width: width,\r\n        bgcolor: 'background.paper',\r\n        border: '2px solid #000',\r\n        boxShadow: 24,\r\n        p: 4,\r\n    };\r\n\r\n    function closeModal() {\r\n        setDelTaskStatus(false)\r\n    }\r\n\r\n    function delTask() {\r\n        api.delete('task/delTask', {\r\n            params: {\r\n                taskId: taskId\r\n            }\r\n        })\r\n        .then((dat) => {\r\n            if(dat.data.error){\r\n                setcallError(true)\r\n                setErrorInfo(dat.data.error)\r\n            }else{\r\n                closeModal()\r\n            }\r\n        })\r\n        .catch((error) => {\r\n            setcallError(true)\r\n            setErrorInfo(error)\r\n        })\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Modal\r\n                open={delTaskStatus}\r\n                onClose={closeModal}\r\n                aria-labelledby=\"modal-modal-title\"\r\n                aria-describedby=\"modal-modal-description\"\r\n            >\r\n                <Box sx={style}>\r\n\r\n                    <div>\r\n                        <h4>Are you sure you want to delete this task?</h4><br/>\r\n                        <p><strong>OBS.:</strong> within the next 7 days, you can still retrieve this task back, if that time runs out, it cannot be retrieved again. </p><br/>\r\n                        <hr/><br/>\r\n                    </div>\r\n\r\n                    <div className=\"taskModalButtons\">\r\n                        <div>\r\n                            <Button variant=\"contained\" color=\"secondary\" onClick={delTask}>  delete this Task</Button>\r\n                            <Button variant=\"contained\" color=\"primary\" onClick={closeModal}>cancel</Button>\r\n                        </div>\r\n                        <div></div>\r\n                    </div>\r\n                </Box>\r\n            </Modal>\r\n            <ErrorModal status={callError} setStatus={setcallError} info={errorInfo} />\r\n        </div>\r\n    );\r\n}","import React, { useState, useEffect, useRef } from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Button from '@material-ui/core/Button';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n\r\nimport FormatDate from '../../utils/formatDate';\r\nimport stringFormat from '../../utils/stringFormat';\r\nimport taskModel from '../../models/taskModel';\r\nimport api from '../../api/api';\r\n\r\nimport DeleteTaskModal from './deleteTaskModal'\r\nimport ErrorModal from './errorModal'\r\nimport './Modal.css'\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPencilAlt, faTimesCircle, faTrashAlt } from '@fortawesome/free-solid-svg-icons'\r\n\r\n\r\nexport default function TaskModal({ status, setStatus, taskId, users }: any) {\r\n\r\n    const [taskInfo, setTaskInfo] = useState<taskModel | any>()\r\n    const [showErrorMessage, setShowErrorMessage] = useState<string>()\r\n    const [showError, setShowError] = useState<boolean>()\r\n    const [delStatus, setDelStatus] = useState<boolean>()\r\n    const [taskStatus, setTaskStatus] = useState<string>()\r\n    const [showDescInput, setShowDescInput] = useState<any>(false)\r\n    const [showTitleInput, setShowTitleInput] = useState<boolean>(false)\r\n    const [changestitle, setChangesTitle] = useState<boolean>(false)\r\n    const [changesStatus, setChangesStatus] = useState<boolean>(false)\r\n    const [changesDesc, setChangesDesc] = useState<boolean>(false)\r\n    const [changesAccountables, setChangesAccountables] = useState<boolean>(false)\r\n    const [showAccountablesInput, setShowAccountablesInput] = useState<boolean>(false)\r\n    const descInp = useRef<any>(null);\r\n\r\n    const [description, setDescription] = useState<string>('')\r\n    const [title, seTitle] = useState<string>('')\r\n    const [accountables, setAccountables] = useState<[string?]>([])\r\n    const [initialTaskStatus, setInitialTaskStatus] = useState<string>()\r\n    const [width, setWidth] = useState<number>(650)\r\n\r\n    useEffect(() => {\r\n        if(window.screen.width < 650){\r\n            setWidth(window.screen.width-10)\r\n        }\r\n    }, [])\r\n    \r\n\r\n    window.addEventListener('resize',(e: any) => {\r\n        if(e.target.innerWidth < 650){\r\n            setWidth(e.target.innerWidth-20)\r\n        }else{\r\n            setWidth(650)\r\n        }\r\n    })\r\n\r\n    const style = {\r\n        position: 'absolute' as 'absolute',\r\n        top: '50%',\r\n        left: '50%',\r\n        transform: 'translate(-50%, -50%)',\r\n        width: width,\r\n        boxShadow: 24,\r\n        padding: '0px'\r\n    };\r\n\r\n    \r\n    function closeModal() {\r\n        setAccountables([])\r\n        setInitialTaskStatus('')\r\n        seTitle('')\r\n        setDescription('')\r\n        setStatus(false)\r\n        setChangesDesc(false)\r\n        setChangesTitle(false)\r\n        setChangesAccountables(false)\r\n        setChangesStatus(false)\r\n    }\r\n\r\n    function removeItemOnce(value: any) {\r\n        const array: any = []\r\n        if (taskInfo?.accountable === undefined) {\r\n            return\r\n        }\r\n        taskInfo?.accountable.forEach((element: any) => {\r\n            if (element === value) {\r\n                return\r\n            } else {\r\n                array.push(element)\r\n            }\r\n        })\r\n\r\n        setTaskInfo({\r\n            _id: taskInfo._id,\r\n            CreatedAt: taskInfo.CreatedAt,\r\n            plannerId: taskInfo.plannerId,\r\n            StageId: taskInfo.StageId,\r\n            accountable: array,\r\n            description: taskInfo.description,\r\n            title: taskInfo.title,\r\n            status: taskInfo.status\r\n        })\r\n\r\n        if (accountables !== array) {\r\n            setChangesAccountables(true)\r\n        } else {\r\n            setChangesAccountables(false)\r\n        }\r\n    }\r\n\r\n    function updateTask() {\r\n        \r\n        api.put('/task/update', {\r\n            params: {\r\n                updatedTask: taskInfo\r\n            }\r\n        })\r\n        .then((dat: any) => {\r\n                if (!dat.data.error) {\r\n                    setShowTitleInput(false)\r\n                    setShowDescInput(false)\r\n                    setShowAccountablesInput(false)\r\n                    closeModal()\r\n                } else {\r\n                    setShowError(true)\r\n                    setShowErrorMessage(dat.data.error)\r\n                }\r\n            })\r\n    }\r\n\r\n    useEffect(() => {\r\n        api.get('/task', {\r\n            params: {\r\n                taskId: taskId\r\n            }\r\n        })\r\n            .then((element: any) => {\r\n                setTaskInfo(element.data)\r\n                setDescription(element.data.description)\r\n                seTitle(element.data.title)\r\n                setAccountables(element.data.accountable)\r\n                setInitialTaskStatus(element.data.taskStatus)\r\n            })\r\n            .catch((error) => {\r\n                setShowError(true)\r\n                setShowErrorMessage(error)\r\n            })\r\n    }, [status])\r\n\r\n    useEffect(() => {\r\n        if (!delStatus) {\r\n            closeModal()\r\n        }\r\n    }, [delStatus])\r\n\r\n    function updateTaskStatus(stt: string) {\r\n        if (stt === taskInfo.status) {\r\n            setChangesStatus(false)\r\n        } else {\r\n            setChangesStatus(true)\r\n            setTaskInfo({\r\n                _id: taskInfo._id,\r\n                CreatedAt: taskInfo.CreatedAt,\r\n                plannerId: taskInfo.plannerId,\r\n                StageId: taskInfo.StageId,\r\n                accountable: taskInfo.accountable,\r\n                description: taskInfo.description,\r\n                title: taskInfo.title,\r\n                status: stt\r\n            })\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <div>\r\n                <Modal\r\n                    open={status}\r\n                    onClose={() => setStatus(false)}\r\n                    aria-labelledby=\"modal-modal-title\"\r\n                    aria-describedby=\"modal-modal-description\"\r\n                >\r\n                    <Box sx={style}\r\n                    >\r\n\r\n                        <div className='taskModal'>\r\n\r\n                            <div className={`taskModalHeader ${taskInfo?.status}`}>\r\n                                <div>\r\n                                    <p>\r\n                                        <span className=\"pencil\" onClick={() => setShowTitleInput(!showTitleInput)}><FontAwesomeIcon icon={faPencilAlt} /></span>\r\n                                        &nbsp;&nbsp;\r\n                                        {showTitleInput ? <TextField\r\n                                            id=\"standard-size-small\"\r\n                                            defaultValue={taskInfo?.title}\r\n                                            size=\"medium\"\r\n                                            variant=\"standard\"\r\n                                            onChange={(value: any) => {\r\n                                                setTaskInfo(() => {\r\n                                                    if (taskInfo) {\r\n                                                        let tsk: taskModel = taskInfo;\r\n                                                        tsk.title = value.target.value;\r\n                                                        return tsk\r\n                                                    }\r\n                                                })\r\n                                                if (title !== taskInfo?.title) {\r\n                                                    setChangesTitle(true)\r\n                                                } else {\r\n                                                    setChangesTitle(false)\r\n                                                }\r\n                                            }}\r\n                                        /> : (taskInfo?.title?.length <= 35) ? <h3>{taskInfo?.title}</h3> : <Tooltip\r\n                                            title={taskInfo?.title} placement=\"top-end\">\r\n                                            <h3>{stringFormat(taskInfo?.title, 35)}</h3>\r\n                                        </Tooltip>}\r\n\r\n\r\n                                    </p>\r\n                                </div>\r\n                                <div>\r\n                                    {FormatDate(taskInfo?.CreatedAt)[0]}&nbsp;&nbsp;{FormatDate(taskInfo?.CreatedAt)[1]}\r\n                                </div>\r\n                            </div>\r\n                            <br />\r\n\r\n                            <div className=\"taskModalBody\">\r\n                                <div className=\"accountableList\">\r\n                                    <div>\r\n                                        {taskInfo?.accountable?.map((el: any) => <div >\r\n                                            <span className=\"accountable\">\r\n                                                <span>{el}</span>&nbsp;&nbsp; <span className={el} onClick={() => removeItemOnce(el)}><FontAwesomeIcon icon={faTimesCircle}></FontAwesomeIcon></span>\r\n                                            </span>\r\n                                        </div>\r\n                                        )}\r\n                                    </div>\r\n                                    <div>\r\n                                        <TextField select label={'status ' + taskInfo?.status} fullWidth\r\n                                            helperText=\"Please select the status for this task.\" >\r\n                                            <MenuItem\r\n                                                onClick={() => updateTaskStatus('none')}\r\n                                                className=\"none\"\r\n                                            >none\r\n                                            </MenuItem>\r\n                                            <MenuItem\r\n                                                onClick={() => updateTaskStatus('waiting more details')}\r\n                                                className=\"waiting more details\"\r\n                                            >waiting more details\r\n                                            </MenuItem>\r\n                                            <MenuItem\r\n                                                onClick={() => updateTaskStatus('progressing')}\r\n                                                className=\"progressing\"\r\n                                            >progressing\r\n                                            </MenuItem>\r\n                                            <MenuItem\r\n                                                onClick={() => updateTaskStatus('interrupted')}\r\n                                                className=\"interrupted\"\r\n                                            >interrupted\r\n                                            </MenuItem>\r\n                                            <MenuItem\r\n                                                onClick={() => updateTaskStatus('priority')}\r\n                                                className=\"priority\"\r\n                                            >priority\r\n                                            </MenuItem>\r\n                                        </TextField>\r\n                                    </div>\r\n                                </div>\r\n                                <TextField select label=\"accountable\" fullWidth\r\n                                    helperText=\"Please select the accountable for this task.\" >\r\n                                    {users?.map((option: any) => (\r\n                                        <MenuItem\r\n                                            onClick={(e: any) => {\r\n                                                if (taskInfo?.accountable?.indexOf(option.email) === -1) {\r\n                                                    const arr = taskInfo.accountable\r\n                                                    if (arr.concat(option.email) !== accountables) {\r\n                                                        arr.push(option.email)\r\n                                                        setChangesAccountables(true)\r\n\r\n                                                    } else {\r\n                                                        setChangesAccountables(false)\r\n                                                    }\r\n                                                    setTaskInfo({\r\n                                                        _id: taskInfo._id,\r\n                                                        CreatedAt: taskInfo.CreatedAt,\r\n                                                        plannerId: taskInfo.plannerId,\r\n                                                        StageId: taskInfo.StageId,\r\n                                                        accountable: arr,\r\n                                                        description: taskInfo.description,\r\n                                                        title: taskInfo.title,\r\n                                                        status: taskInfo.status\r\n                                                    })\r\n                                                }\r\n                                            }}>\r\n                                            {option.name}\r\n                                        </MenuItem>\r\n                                    ))}\r\n                                </TextField>\r\n                                <span>\r\n                                    <span className=\"pencil\" onClick={() => setShowDescInput(!showDescInput)}><FontAwesomeIcon icon={faPencilAlt} /> description</span>\r\n                                    <br />\r\n                                    {showDescInput ? <TextField\r\n                                        id=\"outlined-multiline-static\"\r\n                                        fullWidth\r\n                                        multiline\r\n                                        // rows={7}\r\n                                        ref={descInp}\r\n                                        defaultValue={taskInfo?.description}\r\n                                        onChange={(value: any) => {\r\n                                            setTaskInfo(() => {\r\n                                                if (taskInfo) {\r\n                                                    let tsk: taskModel = taskInfo;\r\n                                                    tsk.description = value.target.value;\r\n                                                    return tsk\r\n                                                }\r\n                                            })\r\n\r\n                                            if (description !== value.target.value) {\r\n                                                setChangesDesc(true)\r\n                                            } else {\r\n                                                setChangesDesc(false)\r\n                                            }\r\n\r\n                                        }\r\n                                        }\r\n                                    /> : <span>{taskInfo?.description}</span>}\r\n                                </span>\r\n                                <span>\r\n                                </span>\r\n                            </div>\r\n                            <br />\r\n\r\n                            <div className=\"taskModalButtons\">\r\n                                <div>\r\n\r\n                                    <Button variant=\"contained\" color=\"primary\" onClick={() =>\r\n                                        (changesStatus || changestitle || changesDesc || changesAccountables) ? updateTask() : closeModal()\r\n                                    }>\r\n                                        {(changesStatus || changestitle || changesDesc || changesAccountables) ? 'Update' : 'Ok'}\r\n                                    </Button>\r\n\r\n                                    {(changesStatus || changestitle || changesDesc || changesAccountables) ? <Button variant=\"contained\" color=\"secondary\" onClick={closeModal}>Cancel</Button> : ''}\r\n                                </div>\r\n                                <div>\r\n                                    <FontAwesomeIcon icon={faTrashAlt} onClick={() => setDelStatus(true)} />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </Box>\r\n                </Modal>\r\n            </div>\r\n            <DeleteTaskModal delTaskStatus={delStatus} taskId={taskId} setDelTaskStatus={setDelStatus} />\r\n            <ErrorModal status={showError} setStatus={setShowError} info={showErrorMessage} />\r\n        </>\r\n    );\r\n}","import React, { useEffect, useState } from 'react'\r\nimport TaskModal from '../Modal/TaskModal';\r\nimport './task.css'\r\nimport stringFormat from '../../utils/stringFormat'\r\nimport FormatDate from '../../utils/formatDate'\r\nimport { Tooltip } from '@material-ui/core';\r\n\r\nfunction Task({ info, classN, refe, users }: any) {\r\n\r\n    const [date, setDate] = useState<string>()\r\n    const [dateDetails, setDateDetails] = useState<string>()\r\n    const [callTaskModal, setCallTaskModal] = useState<boolean>(false);\r\n    const [taskId, setTaskId] = useState<string>();\r\n\r\n    useEffect(() => {\r\n        const teste = new Date(info.CreatedAt)\r\n        const year = teste.getFullYear()\r\n        const month = teste.getMonth()\r\n        const day = teste.getDate()\r\n        const hours = teste.getHours()\r\n        const minutes = teste.getMinutes()\r\n        setDateDetails(`${hours}:${minutes}`)\r\n        setDate(`${year}-${month}-${day}`)\r\n    }, [info])\r\n\r\n    function TaskInfoDetails(taskId: string) {\r\n        setCallTaskModal(true)\r\n        setTaskId(taskId)\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <div\r\n                className={classN}\r\n                ref={refe?.innerRef}\r\n                {...refe?.draggableProps}\r\n                {...refe?.dragHandleProps}\r\n                onClick={() => TaskInfoDetails(info._id)}\r\n            >\r\n                <div className={`taskCard  ${info.status}`} id={info._id}>\r\n                    <Tooltip title={info.title?.length >=25? <span style={{ fontSize: '16px'}}>{info.title}</span>: ''}>\r\n                        <strong>{info.title? stringFormat(info.title, 25) : '...'}</strong>\r\n                    </Tooltip>\r\n                    <span>{info.description ? stringFormat(info.description, 25) : '...'}</span>\r\n                    <span>{FormatDate(date, true)}</span>\r\n                </div>\r\n            </div>\r\n            <TaskModal status={callTaskModal} setStatus={setCallTaskModal} taskId={taskId} users={users} />\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default Task\r\n","import React, { useContext, useEffect } from 'react';\r\nimport '../sidebar/sideBar.css'\r\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\r\nimport Button from '@material-ui/core/Button';\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faBars } from '@fortawesome/free-solid-svg-icons'\r\n\r\n\r\nfunction SideBarResp({ planners }: any) {\r\n    const [state, setState] = React.useState({ left: false });\r\n\r\n    const toggleDrawer = (anchor: any, open: any) => (event: any) => {\r\n        if (event && event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\r\n            return;\r\n        }\r\n\r\n        setState({ ...state, [anchor]: open });\r\n    };\r\n    const list = (anchor:any) => (\r\n        <div\r\n          className='list'\r\n          role=\"presentation\"\r\n          onClick={toggleDrawer(anchor, false)}\r\n          onKeyDown={toggleDrawer(anchor, false)}\r\n          style={{width: '250px'}}\r\n        >\r\n          <List>\r\n                <div className=\"SideNav\">\r\n                    {planners}\r\n                </div>\r\n          </List>\r\n          <Divider />\r\n    \r\n        </div>\r\n      );\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"plannerListBars\">\r\n            <Button onClick={toggleDrawer('left', true)}>\r\n                <FontAwesomeIcon icon={faBars} color=\"white\" style={{fontSize:\"20px\"}}/>\r\n            </Button>\r\n            <SwipeableDrawer\r\n            \r\n            open={state['left']}\r\n            onClose={toggleDrawer('left', false)}\r\n            onOpen={toggleDrawer('left', true)}\r\n          >\r\n            {list('left')}\r\n          </SwipeableDrawer>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SideBarResp\r\n","import React, { useEffect, useState, useContext } from 'react'\r\nimport './sideBar.css'\r\nimport { Link } from 'react-router-dom'\r\nimport { UserContext } from '../../context/userContext'\r\nimport stringFormat from '../../utils/stringFormat';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport SideBarResp from '../sideBarResp/sideBarResp';\r\n\r\nfunction SideBar({ plannerInfo }: any) {\r\n\r\n    const { userInfoContext, setUserInfoContext } = useContext<any>(UserContext)\r\n    const [showPlanners, setShowPlanners] = useState<any>([])\r\n\r\n    useEffect(() => {\r\n        setShowPlanners([])\r\n        setShowPlanners([<span>{plannerInfo}</span>])\r\n        userInfoContext?.planners?.forEach((element: any) => {\r\n\r\n            setShowPlanners((oldArray: any) => [...oldArray,\r\n            <div className=\"plannerItem\">\r\n                <Tooltip\r\n                    title={element.name?.length > 15 ? <span className=\"text\">{element.name}</span>  : ''} placement=\"top-end\">\r\n                    <Link\r\n                        to={`../../planner/id=${element.plannerId}`} key={element.plannerId}>\r\n                        {stringFormat(element.name, 15)}\r\n                    </Link>\r\n                </Tooltip>\r\n            </div>])\r\n        })\r\n    }, [userInfoContext, setUserInfoContext, plannerInfo])\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"plannerList\">\r\n                <div>\r\n\r\n                {/* <span>{plannerInfo}</span> */}\r\n                <br />\r\n                </div>\r\n                <div>{showPlanners}</div>\r\n            </div>\r\n            <SideBarResp planners={showPlanners}/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SideBar\r\n","import React, { useEffect, useState, useRef, useContext } from 'react'\r\nimport { DragDropContext, Draggable, Droppable, DropResult } from \"react-beautiful-dnd\"\r\n\r\nimport './Planner.css'\r\nimport '../../components/task/task.css'\r\nimport { UserContext } from '../../context/userContext'\r\n\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCog, faPlus, faUserAlt } from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport authPlanner from '../../utils/authPlanner'\r\nimport logout from '../../utils/logout';\r\nimport api from '../../api/api'\r\nimport { emitEvent, listenEvent, RemoveEvent } from '../../utils/socket'\r\n\r\n\r\n\r\nimport NewColumnModal from '../../components/Modal/NewColumnModal'\r\nimport NewTaskModal from '../../components/Modal/NewTaskModal'\r\nimport InfoModal from '../../components/Modal/InfoModal'\r\nimport ErrorModal from '../../components/Modal/errorModal'\r\n\r\nimport columnModel from '../../models/columnModel'\r\nimport NavHeader from '../../components/navHeader/NavHeader'\r\nimport Task from '../../components/task/task'\r\nimport SideBar from '../../components/sidebar/SideBar'\r\nimport taskModel from '../../models/taskModel'\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nfunction Planner({ props }: any) {\r\n    const { userInfoContext, setUserInfoContext } = useContext<any>(UserContext)\r\n\r\n\r\n    const [plannerId, setPlannerId] = useState<string>('')\r\n    const history = useHistory();\r\n\r\n    const [confirmDelColum, setConfirmDelColum] = useState<boolean>(false);\r\n    const [createNewColumn, setCreateNewColumn] = useState<boolean>(false);\r\n    const [infoModal, setInfoModal] = useState<boolean>();\r\n    const [createNewTask, setCreateNewTask] = useState<boolean>(false);\r\n    const [callError, setcallError] = useState<boolean>(false);\r\n    const [userTasks, getUserTasks] = useState<boolean>(false);\r\n    const [GetPlannerInfo, SetGetPlannerInfo] = useState<any>();\r\n    const [userEmail, getUserEmail] = useState<string>('');\r\n    const [columnId, setcolumnId] = useState<string>('');\r\n    const [users, setUsers] = useState<any>();\r\n    const [modalMessage, setModalMessage] = useState<any>();\r\n    const [errorInfo, setErrorInfo] = useState<string>();\r\n\r\n\r\n\r\n    const [columns, setColumns] = useState<any>({});\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        const queryString = window.location.hash;\r\n\r\n        const start = queryString.search('=') + 1\r\n        const end = queryString.length\r\n        const id = queryString.substring(start, end)\r\n\r\n        initializerPlanner(id)\r\n            .catch((error) => {\r\n                setcallError(true)\r\n                setErrorInfo(error)\r\n                // logout()\r\n            })\r\n\r\n    }, [props.match.params.id])\r\n\r\n    useEffect(() => {\r\n        RemoveEvent('changeTask')\r\n        RemoveEvent('updateTaskInfo')\r\n        RemoveEvent('newTask')\r\n        RemoveEvent('currentUsers')\r\n        RemoveEvent('delTask')\r\n        RemoveEvent('restoreTask')\r\n        listenEvent('delTask', (data: any) => {\r\n            const { task } = data\r\n            setColumns(task)\r\n        })\r\n\r\n        listenEvent('changeTask', (pln: columnModel[]) => {\r\n            setColumns(pln)\r\n        })\r\n        listenEvent('updateTaskInfo', (data: any, graphValues: any) => {\r\n            setColumns(data.columns)\r\n        })\r\n        listenEvent('newTask', (dat: any) => {\r\n            if (userInfoContext?._id !== undefined &&\r\n                (dat.userId !== userInfoContext?._id)) {\r\n                setInfoModal(true)\r\n                setModalMessage(dat)\r\n            }\r\n            setColumns(dat.columns)\r\n        })\r\n\r\n        listenEvent('currentUsers', (usersList: any) => {\r\n            setUsers(usersList)\r\n        })\r\n\r\n        listenEvent('restoreTask', (data: any) => {\r\n            const { tasksRestored } = data\r\n            if (tasksRestored) {\r\n                setColumns(tasksRestored)\r\n            }\r\n        })\r\n    }, [userInfoContext?._id])\r\n\r\n\r\n    function updateTaskPosition(col: any) {\r\n        api.put('/task/updateTaskPosition', {\r\n            params: { columns: col, plannerId, userId: userInfoContext?._id }\r\n        })\r\n    }\r\n\r\n\r\n    const onDragEnded = (result: any, columns: any, setColumns: any) => {\r\n        if (!result.destination) return;\r\n        const { source, destination } = result;\r\n        if (source.droppableId !== destination.droppableId) {\r\n            const sourceColumn = columns[source.droppableId];\r\n            const destColumn = columns[destination.droppableId];\r\n            const sourceItems = [...sourceColumn.tasks];\r\n            const destItems = [...destColumn.tasks];\r\n\r\n            const [removed] = sourceItems.splice(source.index, 1);\r\n            destItems.splice(destination.index, 0, removed);\r\n            updateTaskPosition({\r\n                ...columns,\r\n                [source.droppableId]: {\r\n                    ...sourceColumn,\r\n                    tasks: sourceItems\r\n                },\r\n                [destination.droppableId]: {\r\n                    ...destColumn,\r\n                    tasks: destItems\r\n                }\r\n            });\r\n        } else {\r\n            const column = columns[source.droppableId];\r\n            const copiedItems = [...column.tasks];\r\n            const [removed] = copiedItems.splice(source.index, 1);\r\n            copiedItems.splice(destination.index, 0, removed);\r\n            updateTaskPosition({\r\n                ...columns,\r\n                [source.droppableId]: {\r\n                    ...column,\r\n                    tasks: copiedItems\r\n                }\r\n            });\r\n        }\r\n\r\n    };\r\n\r\n    function callCreateTaskModal(callModal: boolean, coluimnId: string): void {\r\n        setCreateNewTask(callModal)\r\n        setcolumnId(coluimnId)\r\n    }\r\n\r\n\r\n    async function initializerPlanner(id: string) {\r\n        return authPlanner(id)\r\n            .then((data: any) => {\r\n                if (data.data.error) {\r\n                    setcallError(true)\r\n                    setErrorInfo(data.data.error)\r\n                    history.push('/profile')\r\n                    document.location.reload();\r\n                } else {\r\n                    setColumns(data.data.planner?.stages)\r\n                    setPlannerId(data.data.planner._id)\r\n                    setUsers(data.data.planner.users)\r\n                    emitEvent('exitRoom', { plannerId: data.data.planner._id })\r\n                    emitEvent('joinRoom', { plannerId: data.data.planner._id, userId: userInfoContext?._id })\r\n                    SetGetPlannerInfo(<h1 className=\"title\"\r\n                        onClick={() => initializerPlanner(id)}>\r\n                        {data.data.planner.name}\r\n                        </h1>)\r\n\r\n                    return data\r\n                }\r\n            })\r\n            .then((data: any) => {\r\n                if (data.data.error) {\r\n                    setcallError(true)\r\n                    setErrorInfo(data.data.error)\r\n                    history.push('planner-task/#/profile')\r\n                    document.location.reload();\r\n                }\r\n            })\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        if (userTasks) {\r\n            api.get('task/usersTasks', {\r\n                params: {\r\n                    plannerId: plannerId,\r\n                    userEmail: userEmail\r\n                }\r\n            })\r\n                .then((data: any) => {\r\n                    setColumns(data.data.planner.stages)\r\n                    getUserTasks(true)\r\n                })\r\n        }\r\n    }, [plannerId, userEmail])\r\n\r\n    return (\r\n        <>\r\n            <NavHeader users={users} plannerId={plannerId} userId={userInfoContext?._id}\r\n                userEmail={userInfoContext?.email} planner={true} getUserTasks={getUserTasks} participantEmail={getUserEmail}\r\n                plannerInfo={GetPlannerInfo}\r\n            ></NavHeader>\r\n            <div style={{ display: 'flex', height: 'calc(100%  - 80px)', width: '100%' }}>\r\n                <SideBar plannerInfo={GetPlannerInfo}/>\r\n\r\n                <div className=\"stage\">\r\n                    <DragDropContext\r\n                        onDragEnd={result => onDragEnded(result, columns, setColumns)}\r\n                    >\r\n                        {Object.entries(columns)?.map(([columnId, column]: any, index: any) => {\r\n                            return (\r\n                                <div key={columnId}\r\n                                    className={column._id + ' column'}\r\n                                >\r\n                                    <Droppable droppableId={columnId} key={columnId} direction=\"vertical\">\r\n                                        {(provided, snapshot) => {\r\n                                            return (\r\n                                                <div\r\n                                                    {...provided.droppableProps}\r\n                                                    ref={provided.innerRef}\r\n                                                    className={snapshot.isDraggingOver ? \"lightblue\" : \"\"}\r\n                                                >\r\n                                                    <div className=\"columnHeader\">\r\n                                                        <span onClick={() => callCreateTaskModal(true, column._id)}><FontAwesomeIcon icon={faPlus} /> New Task</span>\r\n                                                        <span>{column.StageName}</span>\r\n                                                    </div>\r\n                                                    <div className=\"columnBody\">\r\n                                                        {column.tasks.map((item: any, index: any) => {\r\n                                                            return (\r\n                                                                <Draggable\r\n                                                                    key={item._id}\r\n                                                                    draggableId={item._id}\r\n                                                                    index={index}\r\n                                                                >\r\n                                                                    {(provided, snapshot) => {\r\n                                                                        return (\r\n                                                                            <Task info={item}\r\n                                                                                classN={snapshot.isDragging ? \"dragging Task\" : \"Tasks\"}\r\n                                                                                refe={provided}\r\n                                                                                users={users}\r\n                                                                            />\r\n                                                                        );\r\n                                                                    }}\r\n                                                                </Draggable>\r\n                                                            );\r\n                                                        })}\r\n                                                    </div>\r\n                                                    {provided.placeholder}\r\n                                                </div>\r\n                                            );\r\n                                        }}\r\n                                    </Droppable>\r\n                                </div>\r\n                            );\r\n                        })}\r\n                    </DragDropContext>\r\n                </div>\r\n                <NewColumnModal status={createNewColumn} setStatus={setCreateNewColumn} plannerId={plannerId} />\r\n                <NewTaskModal getUsers={users} status={createNewTask} setStatus={setCreateNewTask} Columnid={columnId} plannerId={plannerId} />\r\n                <InfoModal status={infoModal} setStatus={setInfoModal} info={modalMessage} />\r\n                <ErrorModal status={callError} setStatus={setcallError} info={errorInfo} />\r\n            </div>\r\n        </>\r\n\r\n    );\r\n}\r\n\r\nexport default Planner\r\n","import React, { useEffect, useState } from 'react'\r\nimport Box from '@material-ui/core/Box';\r\nimport Button from '@material-ui/core/Button';\r\nimport Modal from '@material-ui/core/Modal';\r\n\r\nimport api from '../../api/api'\r\nimport { listenEvent } from '../../utils/socket';\r\nimport ErrorModal from './errorModal';\r\n\r\n\r\n\r\nexport default function ConfirmDelTaskModal({ status, setStatus, taskId }: any) {\r\n\r\n    const [width, setWidth] = useState<number>(650)\r\n    const [callError, setcallError] = useState<boolean>(false);\r\n    const [infoError, setinfoError] = useState<string>();\r\n\r\n    useEffect(() => {\r\n        if(window.screen.width < 650){\r\n            setWidth(window.screen.width-10)\r\n        }\r\n    }, [])\r\n    const style = {\r\n        position: 'absolute' as 'absolute',\r\n        top: '50%',\r\n        left: '50%',\r\n        transform: 'translate(-50%, -50%)',\r\n        width: width,\r\n        bgcolor: 'background.paper',\r\n        border: '2px solid #000',\r\n        boxShadow: 24,\r\n        p: 4,\r\n    };\r\n\r\n    window.addEventListener('resize',(e: any) => {\r\n        if(e.target.innerWidth < 650){\r\n            setWidth(e.target.innerWidth-20)\r\n        }else{\r\n            setWidth(650)\r\n        }\r\n    })\r\n    function closeModal() {\r\n        setStatus(false)\r\n    }\r\n    function delTask() {\r\n\r\n        api.delete('/task/confirmDelTask', {\r\n            params: {\r\n                taskId: taskId\r\n            }\r\n        })\r\n            .then((data) => {\r\n                if(data.data.error){\r\n                    setinfoError(data.data.error)\r\n                    setcallError(true)\r\n                    return\r\n                }else{\r\n                    closeModal()\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                setinfoError(error)\r\n                setcallError(true)\r\n                closeModal()\r\n            })\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <div>\r\n            <Modal\r\n                open={status}\r\n                onClose={closeModal}\r\n                aria-labelledby=\"modal-modal-title\"\r\n                aria-describedby=\"modal-modal-description\"\r\n            >\r\n                <Box sx={style} className='taskModal'>\r\n                    <h3> Delete Task </h3>\r\n                    <p> Are you sure that you want delete this task. Won't be possible get this task back.</p>\r\n                    <hr /><br/>\r\n                    <div>\r\n                        <Button variant=\"contained\" color=\"primary\" onClick={delTask}>Confirm</Button>\r\n                        <Button variant=\"contained\" color=\"secondary\" onClick={closeModal} >cancel</Button>\r\n                    </div>\r\n                </Box>\r\n            </Modal>\r\n        </div>\r\n        <ErrorModal status={callError} setStatus={setcallError} info={infoError} />\r\n        </>\r\n    );\r\n}","import React, { useEffect, useState } from 'react'\r\nimport Box from '@material-ui/core/Box';\r\nimport Button from '@material-ui/core/Button';\r\nimport Modal from '@material-ui/core/Modal';\r\n\r\nimport api from '../../api/api'\r\n\r\nexport default function RecoveryTask({ status, setStatus, taskId }: any) {\r\n\r\n    const [width, setWidth] = useState<number>(650)\r\n\r\n    useEffect(() => {\r\n        if(window.screen.width < 650){\r\n            setWidth(window.screen.width-10)\r\n        }\r\n    }, [])\r\n    const style = {\r\n        position: 'absolute' as 'absolute',\r\n        top: '50%',\r\n        left: '50%',\r\n        transform: 'translate(-50%, -50%)',\r\n        width: width,\r\n        bgcolor: 'background.paper',\r\n        border: '2px solid #000',\r\n        boxShadow: 24,\r\n        p: 4,\r\n    };\r\n\r\n    window.addEventListener('resize',(e: any) => {\r\n        if(e.target.innerWidth < 650){\r\n            setWidth(e.target.innerWidth-20)\r\n        }else{\r\n            setWidth(650)\r\n        }\r\n    })\r\n\r\n    function closeModal() {\r\n        setStatus(false)\r\n    }\r\n    function delTask() {\r\n\r\n        api.post('/task/restoreTask', {\r\n            params: {\r\n                taskId: taskId\r\n            }\r\n        })\r\n            .then((data) => {\r\n                closeModal()\r\n            })\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Modal\r\n                open={status}\r\n                onClose={closeModal}\r\n                aria-labelledby=\"modal-modal-title\"\r\n                aria-describedby=\"modal-modal-description\"\r\n            >\r\n                <Box sx={style} className='taskModal'>\r\n                    <h3> Restore Task </h3>\r\n                    <p> Are you sure that you want restore this task.it will be back to the planner in the same stage.</p>\r\n                    <hr /><br/>\r\n                    <div>\r\n                        <Button variant=\"contained\" color=\"primary\" onClick={delTask}>Confirm</Button>&nbsp;&nbsp;\r\n                        <Button variant=\"contained\" color=\"secondary\" onClick={closeModal} >cancel</Button>\r\n                    </div>\r\n                </Box>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}","import React, { useEffect, useState, useRef, useContext } from 'react'\r\nimport './infoPage.css'\r\nimport graphValuesModel from '../../models/graphValuesModel'\r\nimport taskModel from '../../models/taskModel'\r\nimport userModel from '../../models/userModel'\r\nimport { UserContext } from '../../context/userContext'\r\n\r\nimport formatDate from '../../utils/formatDate'\r\nimport stringFormat from '../../utils/stringFormat'\r\nimport authPlanner from '../../utils/authPlanner';\r\nimport { listenEvent, emitEvent, RemoveEvent } from '../../utils/socket'\r\n\r\nimport ConfirmDelTaskModal from '../../components/Modal/ConfirmDelTaskModal'\r\nimport RecoveryTaskModal from '../../components/Modal/RecoveryTaskModal'\r\nimport SideBar from '../../components/sidebar/SideBar';\r\nimport NavHeader from '../../components/navHeader/NavHeader'\r\n\r\nimport { Link } from 'react-router-dom';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTrashAlt, faUndoAlt } from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport { Chart, registerables } from 'chart.js';\r\nChart.register(...registerables);\r\n\r\nfunction InfoPage() {\r\n\r\n    const graph = useRef<any>(null)\r\n\r\n    const { userInfoContext, setUserInfoContext } = useContext<any>(UserContext)\r\n    const [users, setUsers] = useState<[userModel]>();\r\n    const [id, setId] = useState<string>();\r\n    const [delList, setDelList] = useState<[taskModel ]>();\r\n    const [pageInfo, setPageInfo] = useState<any>();\r\n    const [callConfirmDelTask, setCallConfirmDelTask] = useState<boolean>();\r\n    const [callRecoveryTask, setcallRecoveryTask] = useState<boolean>();\r\n    const [taskId, setTaskId] = useState<string>();\r\n\r\n    const [graphValues, setGraphValues] = useState<graphValuesModel>({ none: 0, interrupted: 0, 'waiting more details': 0, priority: 0, progressing: 0 });\r\n\r\n    useEffect(() => {\r\n\r\n        const tasksStatus: graphValuesModel = { none: 0, interrupted: 0, 'waiting more details': 0, priority: 0, progressing: 0 }\r\n        const queryString = window.location.hash;\r\n        const start = queryString.search('=') + 1\r\n        const end = queryString?.lastIndexOf('/')\r\n        authPlanner(queryString.substring(start, end))\r\n            .then((data: any) => {\r\n                console.log(data)\r\n                emitEvent('exitRoom', { plannerId: data.data.planner?._id })\r\n                emitEvent('joinRoom', { plannerId: data.data.planner?._id })\r\n                setId(data.data.planner?._id)\r\n                setPageInfo(data.data.planner)\r\n                setDelList(data.data.delList)\r\n                setUsers(data.data.planner?.users)\r\n                data.data.planner?.stages.forEach((el: any) => {\r\n                    if (el.tasks.length > 0) {\r\n                        el.tasks.forEach((tsk: any) => {\r\n                            if (tsk.status === undefined) {\r\n                                tasksStatus.none = tasksStatus.none + 1\r\n                            }if(tsk.status === 'interrupted'){\r\n                                tasksStatus.interrupted = tasksStatus.interrupted + 1\r\n                            }if(tsk.status === 'waiting more details'){\r\n                                tasksStatus['waiting more details'] = tasksStatus['waiting more details'] + 1\r\n                            }if(tsk.status === 'priority'){\r\n                                tasksStatus.priority = tasksStatus.priority + 1\r\n                            }if(tsk.status === 'progressing'){\r\n                                tasksStatus.progressing = tasksStatus.progressing + 1\r\n                            }if(tsk.status === 'none'){\r\n                                tasksStatus.none = tasksStatus.none + 1\r\n                            }\r\n                            // tasksStatus[status] = tasksStatus[status] + 1\r\n                            // typescript error /\\\r\n                        });\r\n                    }\r\n\r\n\r\n                })\r\n                setGraphValues(tasksStatus)\r\n            })\r\n\r\n    }, [userInfoContext])\r\n\r\n    interface restoreResultModel {\r\n        graphValues: graphValuesModel,\r\n        task: [taskModel]\r\n      }\r\n    interface delTaskModel {\r\n        graphValues: graphValuesModel,\r\n        deletedTask: [taskModel]\r\n      }\r\n    useEffect(() => {\r\n\r\n        RemoveEvent('deletedTask')\r\n        RemoveEvent('restoreTask')\r\n        RemoveEvent('delTask')\r\n        RemoveEvent('updateTaskInfo')\r\n        RemoveEvent('currentUsers')\r\n\r\n        listenEvent('deletedTask', (data: [taskModel]) => {\r\n            setDelList(data)\r\n        })\r\n        listenEvent('restoreTask', ({graphValues, task }: restoreResultModel) => {\r\n            console.log(task)\r\n            setDelList(task)\r\n            setGraphValues(graphValues)\r\n        })\r\n        listenEvent('delTask', ({graphValues, deletedTask}: delTaskModel) => {\r\n            setGraphValues(graphValues)\r\n            setDelList(deletedTask)\r\n        })\r\n        listenEvent('updateTaskInfo', (data: any) => {\r\n            setGraphValues(data.graphValues)\r\n        })\r\n        listenEvent('currentUsers', (usersList: any) => {\r\n            setUsers(usersList)\r\n        })\r\n    }, [])\r\n    useEffect(() => {\r\n\r\n        var ctx = graph?.current.getContext('2d');\r\n        const chart = new Chart(ctx, {\r\n            type: 'doughnut',\r\n            data: {\r\n                labels: Object.keys(graphValues),\r\n                datasets: [{\r\n                    label: 'My First Dataset',\r\n                    data: Object.values(graphValues),\r\n                    backgroundColor: [\r\n                        '#456C86',\r\n                        '#ad88ac',\r\n                        '#b4c237',\r\n                        '#994040',\r\n                        '#62b83a'\r\n                    ],\r\n                    hoverOffset: 4\r\n                }]\r\n            },\r\n            options: {\r\n                responsive: true,\r\n                maintainAspectRatio: true,\r\n\r\n            }\r\n        });\r\n        return () => {\r\n            chart.destroy()\r\n        }\r\n    }, [graphValues])\r\n\r\n\r\n\r\n    function deleteTask(id: string) {\r\n        setTaskId(id)\r\n        setCallConfirmDelTask(true)\r\n    }\r\n    function recoverTask(id: string) {\r\n        setTaskId(id)\r\n        setcallRecoveryTask(true)\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <NavHeader users={users} plannerId={id} userId={userInfoContext?._id}\r\n                userEmail={userInfoContext?.email}  />\r\n            <div style={{ display: 'flex', width: '100%', height: \"calc(100% - 80px)\" }}>\r\n                <SideBar />\r\n                <div className=\"infoPage\">\r\n\r\n                    <Link to={`../id=${id}`}>\r\n                        <h2>{pageInfo?.name}</h2><br />\r\n\r\n                    </Link>\r\n                    <p>created at: {formatDate(pageInfo?.CreatedAt, true)}</p>\r\n                    <p>{pageInfo?.desciption}</p>\r\n                    tasks oppened: {Object.values(graphValues).reduce((a: any, b: any) => a + b)}\r\n                    <div >\r\n\r\n                        {(Object.values(graphValues).find((el) => el !== 0)) !== undefined ? '' : <h4>No Task at this planner</h4>}\r\n                        <div className='graph'>\r\n                            <canvas className=\"myChart\" ref={graph} aria-label=\"Graph\" ></canvas>\r\n                        </div>\r\n                        <div><br />\r\n\r\n                            <div className=\"deletedList\">\r\n                                <h3>Deleted Tasks: {delList?.length}</h3>\r\n                                <div>\r\n\r\n\r\n                                    {delList?.map((el: any) => {\r\n                                        return <div className={`deletedTask ${el.status ? el.status : 'none'}`} id={el._id}>\r\n                                            <h4>{el.title ? stringFormat(el.title, 15) : '...'}</h4>\r\n                                            <p>{formatDate(el.deletedAt, true)}</p>\r\n\r\n                                            <p>{el.status ? el.status : 'none'}</p>\r\n\r\n                                            <div style={{ display: 'flex', justifyContent: 'space-around' }}>\r\n\r\n                                                <Button onClick={() => deleteTask(el._id)}> <FontAwesomeIcon icon={faTrashAlt} color=\"white\" style={{ fontSize: '20px' }} /></Button>\r\n                                                <Button onClick={() => recoverTask(el._id)}> <FontAwesomeIcon icon={faUndoAlt} color=\"white\" style={{ fontSize: '20px' }} /></Button>\r\n                                            </div>\r\n                                        </div>\r\n                                    })}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <ConfirmDelTaskModal status={callConfirmDelTask} setStatus={setCallConfirmDelTask} taskId={taskId} />\r\n            <RecoveryTaskModal status={callRecoveryTask} setStatus={setcallRecoveryTask} taskId={taskId} />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default InfoPage\r\n","import React from 'react'\r\nimport './header.css'\r\nimport { Link } from 'react-router-dom'\r\nimport { faCog, faSignOutAlt } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport logout from '../../utils/logout';\r\n\r\nfunction header() {\r\n\r\n    return (\r\n\r\n        <header className='navHeader'>\r\n            <p>\r\n                <span><Link to=\"/\">Home</Link></span>\r\n            </p>\r\n            <div>\r\n                <Button onClick={() => logout()}>\r\n                    <FontAwesomeIcon icon={faSignOutAlt} style={{fontSize: \"25px\"}}/>\r\n                </Button>\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default header\r\n","import React, { useEffect, useState, useContext } from 'react'\r\nimport './profileBody.css'\r\n\r\nimport { BrowserRouter as Router, Switch, Link } from 'react-router-dom'\r\nimport ProtectedRouter from '../../utils/ProtectedRouter';\r\n\r\nimport NewPlannerForm from '../newPlannerForm/newPlannerForm';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { UserContext } from '../../context/userContext'\r\nimport api from '../../api/api';\r\nimport { Button } from '@material-ui/core';\r\n\r\nfunction ProfileBody() {\r\n\r\n    const { userInfoContext } = useContext<any>(UserContext)\r\n    const [userInfo, setUserInfo] = useState<any>()\r\n\r\n\r\n    useEffect(() => {\r\n        setUserInfo(userInfoContext)\r\n    }, [userInfoContext])\r\n\r\n\r\n\r\n    return (\r\n        <main>\r\n            <Router>\r\n                <Switch>\r\n\r\n\r\n                    <Welcome />\r\n                </Switch>\r\n\r\n            </Router>\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default ProfileBody\r\n\r\n\r\nconst Welcome = ({name, email}: any) => {\r\n    const history = useHistory();\r\n    \r\n    function goTo(){\r\n        history.push('/planner-task/#/profile/newPlanner')\r\n        document.location.reload(); \r\n    }\r\n    const { userInfoContext } = useContext<any>(UserContext)\r\n\r\n    useEffect(() => {\r\n        api.get('/task/userTasks', {\r\n            params: {\r\n                userEmail: userInfoContext?.email\r\n            }\r\n        })\r\n    }, [])\r\n    return (\r\n        <div>\r\n            <div style={{marginTop: '10px'}}>welcome, {userInfoContext?.name}</div>\r\n            <br />\r\n            <Button onClick={goTo} className=\"link\" style={{background:'rgb(14, 121, 28, 0.8)', color: 'white', marginTop: '25px'}}> Create New planner</Button>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React, { useEffect, useState, useContext } from 'react'\r\nimport './profilePage.css'\r\nimport userInfo from '../../models/UserInfo'\r\nimport auth from '../../utils/auth'\r\n\r\nimport { UserContext } from '../../context/userContext'\r\nimport Header from '../../components/header/header'\r\nimport ProfileBody from '../../components/profileBody/profileBody'\r\n\r\nimport logout from '../../utils/logout'\r\nimport SideBar from '../../components/sidebar/SideBar'\r\n\r\nfunction ProfilePage() {\r\n    const { userInfoContext, setUserInfoContext } = useContext<any>(UserContext)\r\n    const [userInfo, setUserInfo] = useState<userInfo>()\r\n\r\n\r\n    useEffect(() => {\r\n        auth.then((data) => {\r\n\r\n            setTimeout(() => {\r\n\r\n\r\n                if (!data.data.error) {\r\n                    setUserInfoContext(data.data)\r\n                } else {\r\n                    logout()\r\n                }\r\n            }, 3000);\r\n        })\r\n\r\n            .catch((error) => {\r\n                logout()\r\n            })\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <div className=\"profile\">\r\n                <Header></Header>\r\n                <div>\r\n                    <SideBar></SideBar>\r\n                    <ProfileBody></ProfileBody>\r\n                </div>\r\n\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProfilePage\r\n","import React, { useEffect, useRef, useState } from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport Button from '@material-ui/core/Button';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport { faEnvelope, faUnlock, faUserAlt } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport api from '../../api/api'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport ErrorModal from './errorModal';\r\n\r\n\r\n\r\nexport default function ChangePassword({ status, setStatus, email, token, setToken}: any) {\r\n\r\n    const history = useHistory();\r\n\r\n\r\n    const [userEmail, setUserEmail] = useState<string>()\r\n    const password = useRef<any>(null);\r\n    const password2 = useRef<any>(null);\r\n\r\n    const [loading, setloading] = useState<boolean>(false)\r\n    const [callErrorModal, setCallErrorModal] = useState<boolean>()\r\n    const [errorInfo, setErrorInfo] = useState<string>()\r\n    const [width, setWidth] = useState<number>(650)\r\n\r\n    useEffect(() => {\r\n        if(window.screen.width < 650){\r\n            setWidth(window.screen.width-10)\r\n        }\r\n    }, [])\r\n    \r\n\r\n    window.addEventListener('resize',(e: any) => {\r\n        if(e.target.innerWidth < 650){\r\n            setWidth(e.target.innerWidth-20)\r\n        }else{\r\n            setWidth(650)\r\n        }\r\n    })\r\n    const style = {\r\n        position: 'absolute' as 'absolute',\r\n        top: '50%',\r\n        left: '50%',\r\n        transform: 'translate(-50%, -50%)',\r\n        width: width,\r\n        boxShadow: 24,\r\n        p: 4,\r\n    };\r\n\r\n\r\n    function closeModal() {\r\n        setStatus(false)\r\n    }\r\n\r\n\r\n    function updatePassword(e: any) {\r\n        e.preventDefault()\r\n\r\n        const first = password.current?.children[1].children[0]?.value.trim()\r\n        const second = password2.current?.children[1].children[0]?.value.trim()\r\n        if (first !== second) {\r\n            setCallErrorModal(true)\r\n            setErrorInfo('passwords are not compatible.')\r\n            setloading(false)\r\n            return\r\n        }\r\n\r\n\r\n        api.post('/auth/UpdatePassword', {\r\n            email: userEmail,\r\n            token,\r\n            password: {\r\n                first,\r\n                second\r\n            }\r\n        })\r\n            .then((data) => {\r\n\r\n                if (!data.data.error) {\r\n                    alert('everything ok, make login again')\r\n                } else {\r\n                    setCallErrorModal(true)\r\n                    setErrorInfo(data.data.error)\r\n                    setloading(false)\r\n                    setToken('')\r\n                    return\r\n                }\r\n            })\r\n            .then(() => {\r\n                history.push('/login')\r\n                document.location.reload();\r\n                closeModal()\r\n            })\r\n            .catch((error) => {\r\n                setCallErrorModal(true)\r\n                setErrorInfo(error)\r\n                setloading(false)\r\n            })\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        setUserEmail(email)\r\n    }, [email])\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Modal\r\n                open={status}\r\n                onClose={closeModal}\r\n                aria-labelledby=\"modal-modal-title\"\r\n                aria-describedby=\"modal-modal-description\"\r\n            >\r\n                <Box sx={style} className=\"taskModal\">\r\n\r\n                    <h3>Change Password</h3>\r\n                    <br />\r\n                    <form action=\"\" onSubmit={(e: any) => updatePassword(e)}>\r\n\r\n                        <div className=\"label\">\r\n                            <Box sx={{ display: 'flex', alignItems: 'flex-end' }} className=\"input\">\r\n                                <FontAwesomeIcon icon={faUnlock} />\r\n                                <TextField id=\"input-with-sx\" label=\"Password\" variant=\"standard\" ref={password} fullWidth type=\"password\" />\r\n                            </Box>\r\n                        </div>\r\n                        <div className=\"label\">\r\n                            <Box sx={{ display: 'flex', alignItems: 'flex-end' }} className=\"input\">\r\n                                <FontAwesomeIcon icon={faUnlock} />\r\n                                <TextField id=\"input-with-sx\" label=\"Repeat Password\" variant=\"standard\" ref={password2} fullWidth type=\"password\" />\r\n                            </Box>\r\n                        </div>\r\n                        <div style={{display: 'flex', justifyContent: 'space-around'}}>\r\n                            <Button variant=\"contained\" color=\"primary\" type=\"submit\">Update Password</Button>\r\n                            <Button variant=\"contained\" color=\"primary\" onClick={closeModal}>cancel</Button>\r\n                        </div>\r\n                    </form>\r\n                    <br />\r\n\r\n                </Box>\r\n            </Modal>\r\n            <ErrorModal status={callErrorModal} setStatus={setCallErrorModal} info={errorInfo} />\r\n\r\n        </div>\r\n    );\r\n}","import React, { useRef, useState, useEffect } from 'react'\r\nimport '../login/Login.css'\r\n\r\nimport { Link } from 'react-router-dom'\r\nimport ErrorModal from '../../../components/Modal/errorModal';\r\nimport ChangePassword from '../../../components/Modal/changePassword'\r\n\r\nimport {  faUnlock, faUserAlt } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nimport api from '../../../api/api'\r\nimport { Button, TextField } from '@material-ui/core';\r\n\r\nfunction Forgot() {\r\n    const email = useRef<any>(null);\r\n    const token = useRef<any>(null);\r\n    const emailCheck = useRef<any>(null);\r\n\r\n    const [callErrorModal, setCallErrorModal] = useState<boolean>()\r\n    const [errorInfo, setErrorInfo] = useState<string>()\r\n    const [tokenValue, setTokenValue] = useState<any>()\r\n    const [useToken, setuseToken] = useState<boolean>(false)\r\n    const [callChangePassword, setCallChangePassword] = useState<boolean>(false)\r\n\r\n    useEffect(() => {\r\n        email.current?.children[1].children[0]?.select()\r\n    }, [])\r\n\r\n    function forgotPassword(e: any) {\r\n        e.preventDefault()\r\n        if (email.current?.children[1].children[0]?.value.trim() === '') {\r\n            setErrorInfo('Email its empty')\r\n            setCallErrorModal(true)\r\n            return\r\n        }\r\n        api.post('/auth/forgot', { email: email.current?.children[1].children[0]?.value.trim() })\r\n            .then((data: any) => {\r\n                if (!data.data.error) {\r\n                    setuseToken(true)\r\n                } else {\r\n                    setErrorInfo(data.data.error.error)\r\n                    setCallErrorModal(true)\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                setErrorInfo(error)\r\n                setCallErrorModal(true)\r\n            })\r\n    }\r\n\r\n    function confirmForgotCode(e: any) {\r\n        e.preventDefault()\r\n        const emailValue = emailCheck.current?.children[1].children[0]?.value.trim()\r\n        const tokenValue = token.current?.children[1].children[0]?.value.trim().toLowerCase()\r\n        setTokenValue(tokenValue)\r\n        if (emailValue !== '' && tokenValue !== '') {\r\n            api.post('/auth/confirmToken', {\r\n                email: emailValue,\r\n                token: tokenValue\r\n            })\r\n                .then((data: any) => {\r\n                    if (!data.data.error) {\r\n\r\n                        setCallChangePassword(true)\r\n\r\n                    } else {\r\n                        setCallErrorModal(true)\r\n                        setErrorInfo(data.data.error)\r\n                    }\r\n                })\r\n                .catch((error) => {\r\n                    setCallErrorModal(true)\r\n                    setErrorInfo(error)\r\n                })\r\n\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n\r\n            <div className=\"HomePageHeader\">\r\n                <Link to=\"/\">Home Page</Link>\r\n                <div>\r\n                    <Link to=\"/login\">log in</Link>\r\n                    <Link to=\"/register\">register</Link>\r\n                </div>\r\n            </div>\r\n            <div className=\"login\">\r\n\r\n                {!useToken ? <div className=\"form\">\r\n                    <div>\r\n                        <span>A token will be sended to your email.</span>\r\n                    </div>\r\n\r\n                    <form action=\"\" onSubmit={(e) => forgotPassword(e)}>\r\n                        <div className=\"label\">\r\n                            <Box sx={{ display: 'flex', alignItems: 'flex-end' }} className=\"input\">\r\n                                <FontAwesomeIcon icon={faUserAlt} />\r\n                                <TextField id=\"input-with-sx\" label=\"Email\" variant=\"standard\" ref={email} fullWidth type=\"email\" />\r\n                            </Box>\r\n                        </div>\r\n                        <Button className=\"loginButton\" type=\"submit\" variant=\"contained\" color=\"primary\">submit</Button>&nbsp;&nbsp;\r\n                        <Button className=\"loginButton\" variant=\"contained\" color=\"primary\" onClick={() => setuseToken(true)}>Use Token</Button>\r\n                    </form>\r\n                </div> : <div className=\"form\">\r\n                    <div>\r\n                        <span>Use your Token</span>\r\n                    </div>\r\n\r\n                    <form action=\"\" onSubmit={(e) => confirmForgotCode(e)}>\r\n                        <div className=\"label\">\r\n                            <Box sx={{ display: 'flex', alignItems: 'flex-end' }} className=\"input\">\r\n                                <FontAwesomeIcon icon={faUserAlt} />\r\n                                <TextField id=\"input-with-sx\" label=\"Email\" variant=\"standard\" ref={emailCheck} fullWidth type=\"email\" />\r\n                            </Box>\r\n                        </div>\r\n                        <div className=\"label\">\r\n                            <Box sx={{ display: 'flex', alignItems: 'flex-end' }} className=\"input\">\r\n                                <FontAwesomeIcon icon={faUnlock} />\r\n                                <TextField id=\"input-with-sx\" label=\"Token\" variant=\"standard\" ref={token} fullWidth />\r\n                            </Box>\r\n                        </div>\r\n                        <Button className=\"loginButton\" type=\"submit\" variant=\"contained\" color=\"primary\">submit</Button>&nbsp;&nbsp;\r\n                        <Button className=\"loginButton\" variant=\"contained\" color=\"primary\" onClick={() => setuseToken(false)}>back</Button>\r\n                    </form>\r\n                </div>}\r\n            </div>\r\n            <ErrorModal status={callErrorModal} setStatus={setCallErrorModal} info={errorInfo} />\r\n            <ChangePassword status={callChangePassword} setStatus={setCallChangePassword} email={emailCheck.current?.children[1].children[0]?.value.trim()} token={tokenValue} setToken={setTokenValue}/>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Forgot\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Route, Redirect } from 'react-router-dom'\r\n\r\ninterface prop {\r\n    isAuth: Boolean,\r\n    Comp: any,\r\n    path: string,\r\n    redirect: any,\r\n}\r\n\r\nfunction ProtectedRouter({ isAuth, redirect, Comp, path }: prop) {\r\n\r\n    const [acess, setAcrss] = useState<any>()\r\n    useEffect(() => {\r\n        if (isAuth !== undefined) {\r\n            if (isAuth) {\r\n                setAcrss(isAuth)\r\n            } else {\r\n                setAcrss(false)\r\n            }\r\n        }else{\r\n        }\r\n        // setAcrss(undefined)\r\n    }, [isAuth])\r\n    return (\r\n        <Route path={path} render={(props) => {\r\n            if (isAuth !== undefined) {\r\n                if (isAuth) {\r\n                    return <Comp props={props} tabIndex=\"0\" />\r\n                } else {\r\n                    return <Redirect to={{ pathname: redirect, state: { from: props.location } }} />\r\n                }\r\n            }\r\n        }} />\r\n    )\r\n}\r\n\r\nexport default ProtectedRouter\r\n","export default __webpack_public_path__ + \"static/media/planner.1a013b59.svg\";","export default __webpack_public_path__ + \"static/media/task.55386f40.svg\";","import React from 'react'\r\nimport './img.css'\r\n\r\nfunction Waves() {\r\n    return (\r\n<div className=\"custom-shape-divider-bottom-1633726484\">\r\n    <svg data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1200 120\" preserveAspectRatio=\"none\">\r\n        <path d=\"M321.39,56.44c58-10.79,114.16-30.13,172-41.86,82.39-16.72,168.19-17.73,250.45-.39C823.78,31,906.67,72,985.66,92.83c70.05,18.48,146.53,26.09,214.34,3V0H0V27.35A600.21,600.21,0,0,0,321.39,56.44Z\" className=\"shape-fill\"></path>\r\n    </svg>\r\n</div>\r\n    )\r\n}\r\n\r\nexport default Waves\r\n","import React, {useEffect, useState} from 'react'\r\nimport './HomePage.css'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport Planner from '../../assets/svg/planner.svg'\r\nimport task from '../../assets/svg/task.svg'\r\nimport taskSteps from '../../assets/svg/taskSteps.svg'\r\nimport Curve from '../../assets/shapes/curve'\r\nimport Waves from '../../assets/shapes/Waves'\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faGithub, faLinkedin } from '@fortawesome/free-brands-svg-icons'\r\nimport { faLaptop } from '@fortawesome/free-solid-svg-icons'\r\n\r\n\r\n\r\n\r\n\r\nfunction HomePage() {\r\n    const [width, setWidth ] = useState<number>(400)\r\n\r\n    useEffect(() => {\r\n        if(window.screen.width < 400){\r\n            setWidth(window.screen.width-30)\r\n        }\r\n    }, [])\r\n\r\n    window.addEventListener('resize',(e: any) => {\r\n        if(window.screen.width < 400){\r\n            setWidth(window.screen.width-30)\r\n        }else{\r\n            setWidth(400)\r\n        }\r\n    })\r\n    return (\r\n        <div className=\"HomePage\">\r\n            <div className=\"HomePageHeader\">\r\n                <Link to=\"/profile\">profile</Link>\r\n                <div>\r\n\r\n                    <Link to=\"/login\">log in</Link>\r\n                    <Link to=\"/register\">register</Link>\r\n                </div>\r\n            </div>\r\n                <div className=\"home\">\r\n                    <h3>Just a simple Planner</h3>\r\n                    <div>\r\n                        <p>inspired in the Microsoft Planner, this tool helps you  to create a  simple and visual way to organize work that is updated in real time for the entire team.</p>\r\n                        <img src={task} alt=\"\" width={width} className=\"iconAbout\" />\r\n\r\n                    </div>\r\n                    <br />\r\n                    <div>\r\n                        <p>create and organize your demands and tasks according to your <span className=\"textTarget\"> team's </span> needs.</p>\r\n                        <img src={Planner} alt=\"\" width={width} className=\"iconAbout\" />\r\n                        <p>solutions and task changes will be <span className=\"textTarget\">updated in real time</span>, so even working <span className=\"textTarget\">remotely and concurrently</span> with other people, the planner will update to <span className=\"textTarget\">everyone</span> at the same time.</p>\r\n                    </div>\r\n                </div>\r\n            <div className=\"bodyHome\">\r\n                <div style={{ position: \"relative\" }}>\r\n                    <div style={{ position: \"relative\" }}><Waves /></div>\r\n                    <div style={{\r\n                        marginTop: '-1px',\r\n                        background: \"linear-gradient(180deg, rgba(47,41,112,1) 0%, rgba(23,18,69,1) 100%)\"\r\n                    }}>\r\n                        <br />\r\n                        <br />\r\n                        <br />\r\n                        <br />\r\n                        <br />\r\n                    </div>\r\n                    <div style={{ background: \"#171245\" }}>\r\n                        <div className=\"about\">\r\n                            <h2>About</h2>\r\n                            <span className=\"my\">\"Use my knowledge to improve and test my skills as a <span className=\"textTarget\">programmer</span> \".🚀</span>\r\n                            <p>This project is part of my <a href=\"https://gabrielp-oliveira.github.io/\" target=\"_blank\" rel=\"noreferrer\"> <span className=\"textTarget\">\r\n                                portfolio</span></a>, so feel free to get in touch for feedback on the code, structure or other reason that will help me become a better programmer!</p>\r\n                            <br />\r\n                            <div>\r\n                                <a href=\"https://github.com/gabrielp-oliveira\" target=\"_blank\" rel=\"noreferrer\">\r\n                                    <FontAwesomeIcon icon={faGithub} />\r\n                                </a>\r\n                                <a href=\"https://www.linkedin.com/in/gabriel-97-oliveira\" target=\"_blank\" rel=\"noreferrer\">\r\n                                    <FontAwesomeIcon icon={faLinkedin} />\r\n                                </a>\r\n                                <a href=\"https://gabrielp-oliveira.github.io/\" target=\"_blank\"rel=\"noreferrer\">\r\n                                    <FontAwesomeIcon icon={faLaptop} />\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                    <div style={{display: 'flex', justifyContent: 'center', flexWrap: 'wrap', paddingBottom: '50px'}}>\r\n\r\n                        <div className=\"functionalities\">\r\n                            <h2 >Functionalities</h2>\r\n                            <div >\r\n                                <li >Register and login a personal account.</li>\r\n                                <li >Saved all the tasks and planner in a database</li>\r\n                                <li >update all changes to everyone at the same time.</li>\r\n                                <li >limit the acess of a user depending of her acess.</li>\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                        <div className=\"observations\">\r\n                            <h2 >Observations</h2>\r\n\r\n                            <p>you can find the front-end repository <a href=\"https://github.com/gabrielp-oliveira/planner-task\">here</a>, and the back-end <a href=\"https://github.com/gabrielp-oliveira/planner-task-node\">here</a>.</p>\r\n                            <p>This app is hosted on heroku free plan, meaning that on the initial load, the server mat neet to start which can cause a delay.</p> </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"footer\">\r\n                    <span >Designed & Developed by <a href=\"https://github.com/gabrielp-oliveira\" target=\"_blank\" rel=\"noreferrer\">Gabriel P. Oliveira</a></span>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HomePage\r\n","import React, { useRef, useState, useEffect } from 'react'\r\nimport '../login/Login.css'\r\n\r\nimport { Link } from 'react-router-dom'\r\nimport api from '../../../api/api'\r\n\r\nimport {  faUnlock, faEnvelope } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport Box from '@material-ui/core/Box';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport ErrorModal from '../../../components/Modal/errorModal'\r\n\r\nfunction Confirmation() {\r\n\r\n    \r\n    const history = useHistory();\r\n\r\n    const code = useRef<any>(null);\r\n    const email = useRef<any>(null);\r\n    const [callErrorModal, setCallErrorModal] =useState<boolean>()\r\n    const [errorInfo, setErrorInfo] =useState<string>()\r\n    const [loading, setloading] = useState<boolean>(false)\r\n\r\n    useEffect(() => {\r\n        email.current?.children[1].children[0]?.select()\r\n    }, [])\r\n    function verifyEmail (e: any){\r\n        e.preventDefault()\r\n        setloading(true)\r\n        const emailValue = email.current?.children[1].children[0]?.value.trim()\r\n        const tokenValue = code.current?.children[1].children[0]?.value.trim()\r\n        if (emailValue !== '' && tokenValue !== '') {\r\n            api.post('/auth/confirmCode', {\r\n                email: emailValue,\r\n                token: tokenValue\r\n            })\r\n                .then((data) => {\r\n                    if(!data.data.error){\r\n                        alert('everything ok, make login again')\r\n                        history.push('/login')\r\n                        document.location.reload();\r\n                        setCallErrorModal(false) \r\n                    }else{\r\n                        setCallErrorModal(true)\r\n                        setErrorInfo(data.data.error)\r\n                        setloading(false)\r\n                    }\r\n                })\r\n                .catch((error) => {\r\n                    setCallErrorModal(true)\r\n                    setErrorInfo(error)\r\n                    setloading(false)\r\n                })\r\n        } else {\r\n            setCallErrorModal(true)\r\n            setErrorInfo('some input is empty, please fill all the data.')\r\n            setloading(false)\r\n        }\r\n\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"HomePageHeader\">\r\n                <Link to=\"/\">Home Page</Link>\r\n                <div>\r\n                    <Link to=\"/login\">log in</Link>\r\n                    <Link to=\"/register\">register</Link>\r\n                </div>\r\n            </div>\r\n            {loading? <CircularProgress style={{ alignSelf: 'center', marginTop: '50px' }} /> : <div className=\"login\">\r\n                <div className=\"form\">\r\n\r\n                    <div>\r\n                        <span>Verify Account</span>\r\n                    </div>\r\n                    <form onSubmit={e => verifyEmail(e)}>\r\n\r\n\r\n                        <div className=\"label\">\r\n\r\n                            <Box sx={{ display: 'flex', alignItems: 'flex-end' }} className=\"input\">\r\n                                <FontAwesomeIcon icon={faEnvelope} />\r\n                                <TextField id=\"input-with-sx\" label=\"Email\" variant=\"standard\" ref={email} fullWidth type=\"email\"/>\r\n                            </Box>\r\n\r\n                        </div>\r\n                        <div className=\"label\">\r\n                            <Box sx={{ display: 'flex', alignItems: 'flex-end' }} className=\"input\">\r\n                                <FontAwesomeIcon icon={faUnlock} />\r\n                                <TextField id=\"input-with-sx\" label=\"Token\" variant=\"standard\" ref={code} fullWidth />\r\n                            </Box>\r\n                        </div>\r\n                        <Button className=\"loginButton\" type=\"submit\" variant=\"contained\" color=\"primary\">verify</Button>&nbsp;&nbsp;\r\n                        <Button className=\"loginButton\" variant=\"contained\" color=\"primary\" onClick={() => {\r\n                        history.push('/login')\r\n                        document.location.reload()}}>Login</Button>\r\n\r\n                    </form>\r\n\r\n                </div>\r\n            </div>}\r\n            <ErrorModal status={callErrorModal} setStatus={setCallErrorModal} info={errorInfo} />\r\n            \r\n        </ >\r\n\r\n    )\r\n}\r\n\r\nexport default Confirmation\r\n","import React, { useRef, useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport { faForward, faBackward } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport Button from '@material-ui/core/Button';\r\nimport ErrorModal from '../Modal/errorModal';\r\n\r\nfunction PlannerStart({ formInfo, stage, currentInfo }: any) {\r\n\r\n    const plaannerName = useRef<HTMLInputElement>(null);\r\n    const plannerDescription = useRef<HTMLInputElement>(null);\r\n    const [info, setInfo] = useState<any>({ plannerDescription: '', plaannerName: '' })\r\n    const [errorInfo, setErrorInfo] = useState<string>()\r\n    const [callError, setCallError] = useState<boolean>()\r\n\r\n    function callNextStage() {\r\n\r\n        if ( info.plaannerName?.trim() !== '') {\r\n            formInfo(info)\r\n            stage(1)\r\n        } else {\r\n            setErrorInfo('field name cannot be empty, fill in correctly.')\r\n            setCallError(true)\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        setInfo(currentInfo)\r\n    }, [currentInfo])\r\n\r\n    return (\r\n        <>\r\n\r\n            <div className=\"newPlannerStage\">\r\n                <span>lets start</span>\r\n\r\n                <div>\r\n                    <div>\r\n                        <TextField id=\"standard-basic\" label=\"Planner Name\" \r\n                            fullWidth\r\n                            ref={plaannerName}\r\n                            value={info?.plaannerName} onChange={(e) => setInfo({\r\n                                plaannerName: e.target.value,\r\n                                plannerDescription: info.plannerDescription\r\n                            })} />\r\n\r\n                    </div>\r\n                    <div>\r\n                        <TextField\r\n                            id=\"outlined-multiline-static\"\r\n                            label=\"Description\"\r\n                            multiline fullWidth\r\n                            rows={4}\r\n                            defaultValue={info?.plannerDescription}\r\n                            ref={plannerDescription} \r\n                            value={info?.plannerDescription} onChange={(e) => setInfo({\r\n                                plannerDescription: e.target.value,\r\n                                plaannerName: info.plaannerName})}\r\n                        />\r\n\r\n                    </div>\r\n                </div>\r\n                <p>\r\n                    <Link to=\"/profile\"><Button variant=\"contained\" color=\"secondary\">\r\n                    <FontAwesomeIcon icon={faBackward} />\r\n                        </Button></Link>\r\n                    <Button onClick={callNextStage} variant=\"contained\" color=\"primary\"><FontAwesomeIcon icon={faForward} /></Button>\r\n                </p>\r\n            </div>\r\n            <ErrorModal status={callError} setStatus={setCallError} info={errorInfo}/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PlannerStart\r\n","import React, { useRef, useState, useEffect } from 'react'\r\nimport api from '../../api/api'\r\n\r\nimport { Link } from 'react-router-dom'\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport { faForward, faBackward, faTrashAlt } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport Button from '@material-ui/core/Button';\r\nimport ErrorModal from '../Modal/errorModal';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n\r\nfunction AddParticipants({ formInfo, stage, currentInfo }: any) {\r\n\r\n\r\n    const email = useRef<any>(null);\r\n    const [acess, setAcess] = useState<string>();\r\n    const [currentEmail, setCurrentEmail] = useState<string>('')\r\n    const [errorInfo, setErrorInfo] = useState<string>()\r\n    const [callError, setCallError] = useState<boolean>()\r\n\r\n    function callNextStage() {\r\n        if (currentInfo?.length > 0) {\r\n            stage(2)\r\n        } else {\r\n            alert(\"you didn't added any participant, you can add later, in the planner page.\")\r\n            stage(2)          \r\n        }\r\n    }\r\n    function callPrecursorStage() {\r\n        stage(0)\r\n    }\r\n    function deletethis(ev: any) {\r\n        const newArray = currentInfo.filter((element: any) => {\r\n            return element.email !== ev\r\n        })\r\n        formInfo()\r\n        formInfo(newArray)\r\n    }\r\n\r\n    function confirmUser() {\r\n        if (currentEmail.trim() !== '') {\r\n            if (acess?.trim() != undefined) {\r\n                api.post('/user/confirm', { email: currentEmail, userId: localStorage.getItem(\"UserId\") })\r\n                    .then((data: any) => {\r\n                        if (!data.data.error) {\r\n                            if (currentInfo.find((el: any) => el.email === currentEmail) === undefined) {\r\n                                formInfo((oldArray: any) => [...oldArray, {\r\n                                    email: currentEmail,\r\n                                    acess: acess\r\n                                }])\r\n                            } else {\r\n                                setErrorInfo('already registered user.')\r\n                                setCallError(true)\r\n                            }\r\n                        } else {\r\n                            setErrorInfo(data.data.error)\r\n                            setCallError(true)\r\n                        }\r\n                    }).then(() => {\r\n                        email.current.value = ''\r\n                    })\r\n                    .catch((error) => {\r\n                        email.current.value = ''\r\n                        setErrorInfo(error)\r\n                        setCallError(true)\r\n                    })\r\n            } else {\r\n                setErrorInfo('please fill in the acess field.')\r\n                setCallError(true)\r\n            }\r\n        } else {\r\n            setErrorInfo('please fill in the participant email field.')\r\n            setCallError(true)\r\n        }\r\n\r\n    }\r\n    return (\r\n        <>\r\n            < div className=\"newPlannerStage\">\r\n                <span>participants</span>\r\n\r\n                <div>\r\n                    <div>\r\n                        <TextField type=\"text\" ref={email} label={<span className=\"text\">email of the participant</span>}\r\n                            fullWidth\r\n                            value={currentEmail} onChange={(e) => setCurrentEmail(e.target.value)\r\n                            } />\r\n                    </div>\r\n                    <div>\r\n                        <TextField\r\n                            select\r\n                            name=\"acess\"\r\n                            fullWidth\r\n                            onChange={(e: any) => setAcess(e.target.value)}\r\n                            helperText={<span className=\"text\">Please select the acess for the participant</span>}\r\n                        >\r\n\r\n                            <MenuItem key='intermediate' value='intermediate'>\r\n                                intermediate\r\n                            </MenuItem>\r\n                            <MenuItem key='total' value='total'>\r\n                                total\r\n                            </MenuItem>\r\n                            <MenuItem key='observer' value='observer'>\r\n                                observer\r\n                            </MenuItem>\r\n                        </TextField>\r\n                    </div>\r\n                </div>\r\n                <Button onClick={confirmUser} variant=\"contained\" color=\"primary\">add user</Button ><br />\r\n                <div id=\"participants\">{currentInfo?.map((element: any) => {\r\n                    return <div key={element.email}>\r\n                        <div>\r\n                            <span>{element.email} </span>\r\n                            <span>{element.acess}</span>\r\n                            <Button onClick={() => deletethis(element.email)} variant=\"outlined\" style={{ border: \"1px solid rgb(224, 37, 37, 0.4)\" }}> <FontAwesomeIcon icon={faTrashAlt} /></Button>\r\n                        </div>\r\n\r\n                    </div>\r\n                })}</div>\r\n                <p>\r\n\r\n                    <Button onClick={callPrecursorStage} variant=\"contained\" color=\"secondary\"><FontAwesomeIcon icon={faBackward} /></Button>\r\n\r\n                    <Button onClick={callNextStage} variant=\"contained\" color=\"primary\"><FontAwesomeIcon icon={faForward} /></Button>\r\n                </p>\r\n\r\n\r\n            </div>\r\n            <ErrorModal status={callError} setStatus={setCallError} info={errorInfo} />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AddParticipants\r\n","const  defaultColum = [{\r\n    StageName: 'Approved Ideas',\r\n    pos: 0,\r\n    StageDesc: 'ideas already analyzed and already approved by the team or analyst.'\r\n},\r\n{\r\n    StageName: 'Planning and scale',\r\n    pos: 1,\r\n    StageDesc: 'planning stage and resource counts, also being made the scale of the person responsible for it.'\r\n},\r\n{\r\n    StageName: 'To do',\r\n    pos: 2,\r\n    StageDesc: 'awaiting start of task progress'\r\n},\r\n{\r\n    StageName: 'Out of Range',\r\n    pos: 3,\r\n    StageDesc: 'special tasks that require special attention.'\r\n},\r\n{\r\n    StageName: 'In Progress',\r\n    pos: 4,\r\n    StageDesc: 'tasks in progress, already being worked on and discussed.'\r\n},\r\n{\r\n    StageName: 'Tests',\r\n    pos: 5,\r\n    StageDesc: 'testing stage, not only being tested by the analyst, but can also be tested by the requester or user.'\r\n},\r\n{\r\n    StageName: 'Awaiting approval',\r\n    pos: 6,\r\n    StageDesc: 'waiting for the requester to approve the task.'\r\n},\r\n{\r\n    StageName: 'Implantation',\r\n    pos: 7,\r\n    StageDesc: 'step to move the task to the final environment'\r\n},\r\n{\r\n    StageName: 'Production',\r\n    pos: 8,\r\n    StageDesc: 'already in production, enabling testing in the final environment of the task.'\r\n},\r\n{\r\n    StageName: 'Done',\r\n    pos: 9,\r\n    StageDesc: 'task performed successfully.'\r\n},\r\n\r\n]\r\nexport default defaultColum","import React, { useRef, useState, useEffect } from 'react'\r\nimport Default from './defaultColumns'\r\n\r\nimport api from '../../api/api'\r\nimport { DragDropContext, Draggable, Droppable, DropResult } from \"react-beautiful-dnd\"\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport { faForward, faBackward, faTrashAlt } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport Button from '@material-ui/core/Button';\r\nimport ErrorModal from '../Modal/errorModal';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\nimport auth from '../../utils/auth'\r\nimport stringFormat from '../../utils/stringFormat';\r\n\r\nfunction NewStage({ formInfo, step, currentInfo, status }: any) {\r\n\r\n    const [StageName, setStageName] = useState<string>();\r\n    const [StageDesc, setStageDesc] = useState<string>();\r\n    const [errorInfo, setErrorInfo] = useState<string>()\r\n    const [callError, setCallError] = useState<boolean>()\r\n    function done() {\r\n        auth.then((data) => {\r\n            if (!data.data.error) {\r\n                if (currentInfo.length > 0) {\r\n                    status(true)\r\n                    step(3)\r\n                } else {\r\n                    setErrorInfo('you have to create unless one stage for your planner')\r\n                    setCallError(true)\r\n                }\r\n            } else {\r\n                setErrorInfo(data.data.error) \r\n                setCallError(true)\r\n                // logout()\r\n            }\r\n        }).catch((data) => {\r\n                setErrorInfo(data)\r\n                setCallError(true)\r\n            // logout()\r\n        })\r\n\r\n    }\r\n    function callPrecursorStage() {\r\n        status(false)\r\n        step(1)\r\n    }\r\n\r\n    \r\n    function createNewStage() {\r\n        if (StageName?.trim() !== undefined || StageDesc?.trim() !== undefined) {\r\n\r\n            if (currentInfo?.find((el: any) => el.StageName === StageName) === undefined) {\r\n                if (StageName?.trim() !== '') {\r\n                    formInfo((oldArray: any) => [...oldArray, {\r\n                        StageName: StageName,\r\n                        StageDesc: StageDesc\r\n                    }])\r\n                } else {\r\n                    setErrorInfo('use a valid name')\r\n                    setCallError(true)\r\n                }\r\n            } else {\r\n                setErrorInfo('name allready in use')\r\n                setCallError(true)\r\n            }\r\n        } else {\r\n            setCallError(true)\r\n            setErrorInfo('some field is empty')\r\n        }\r\n    }\r\n    function defaultStage() {\r\n        formInfo([])\r\n        Default.forEach(element => {\r\n            formInfo((oldArray: any) => [...oldArray, {\r\n                StageName: element.StageName,\r\n                StageDesc: element.StageDesc\r\n            }\r\n            ])\r\n        });\r\n    }\r\n\r\n    const onDragEnd = (result: DropResult) => {\r\n        const { source, destination } = result\r\n        if (!destination) return\r\n\r\n        const items = Array.from(currentInfo)\r\n        const [newOrder] = items.splice(source.index, 1)\r\n        items.splice(destination.index, 0, newOrder)\r\n\r\n        formInfo(items)\r\n    }\r\n\r\n    function deletethis(ev: any) {\r\n        const newArray = currentInfo.filter((element: any) => {\r\n            return element.StageName !== ev\r\n        })\r\n        formInfo(newArray)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"newPlannerStage\">\r\n                <span>stages</span>\r\n\r\n                <div>\r\n                    <TextField type=\"text\" label=\"stage Name\" fullWidth onChange={(e) => setStageName(e.target.value)} />\r\n                </div>\r\n                <div>\r\n                    <TextField type=\"text\" id=\"outlined-multiline-static\" multiline onChange={(e) => setStageDesc(e.target.value)} label=\"stage Description\" fullWidth\r\n                        rows={3} />\r\n                </div>\r\n                <div>\r\n                    <div className=\"buttons\">\r\n                        <Button onClick={callPrecursorStage} variant=\"contained\" color=\"secondary\">\r\n                            <FontAwesomeIcon icon={faBackward} />\r\n                        </Button>\r\n                        <Button onClick={done} variant=\"contained\" color=\"primary\">\r\n                            Done !\r\n                        </Button>\r\n                    </div>\r\n                    <div className=\"buttons\">\r\n                        <Button variant=\"contained\" onClick={defaultStage} style={{background:\"rgb(7, 84, 226)\", color: 'white'}} >pre-created stage</Button>\r\n                        <Button variant=\"contained\" onClick={createNewStage} style={{background:\"rgb(179, 0, 140)\", color: 'white'}}> New Stage</Button>\r\n                    </div>\r\n\r\n                </div>\r\n                <span>you can drag and drop the stages to reorder then.</span>\r\n                <span className=\"columnList\">\r\n                    <DragDropContext onDragEnd={onDragEnd}>\r\n                        <Droppable droppableId=\"todo\" direction=\"horizontal\">\r\n                            {(provided) => (\r\n                                <div id=\"todo\" {...provided.droppableProps} ref={provided.innerRef}>\r\n                                    {currentInfo.map(({ StageName, StageDesc }: any, index: any) => {\r\n                                        return (\r\n                                            <Draggable key={StageName} draggableId={StageName} index={index}>\r\n                                                {(provided, snapshot) => (\r\n                                                    <div className={snapshot.isDragging ? \"dragging card\" : \"card\"}\r\n                                                        ref={provided.innerRef}\r\n                                                        {...provided.draggableProps}\r\n                                                        {...provided.dragHandleProps}\r\n                                                    >\r\n                                                        <Tooltip\r\n                                                            title={<span className=\"mat-tooltip\">{StageDesc ? StageName + ' - ' + StageDesc : ''}</span>} placement=\"top-end\">\r\n                                                            <div>\r\n                                                                <span>\r\n                                                                    {stringFormat(StageName, 11)}\r\n                                                                </span>\r\n                                                            </div>\r\n                                                        </Tooltip>\r\n                                                        <Button \r\n                                                            onClick={() => deletethis(StageName)}>\r\n                                                            <FontAwesomeIcon icon={faTrashAlt} />\r\n                                                        </Button>\r\n                                                    </div>\r\n                                                )}\r\n                                            </Draggable>\r\n                                        )\r\n                                    })}\r\n                                </div>\r\n                            )}\r\n                        </Droppable>\r\n                    </DragDropContext>\r\n\r\n                </span>\r\n            </div>\r\n            <ErrorModal status={callError} setStatus={setCallError} info={errorInfo} />\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default NewStage\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nfunction FormDone({ formInfo, stage }: any) {\r\n    const history = useHistory();\r\n\r\n    const [timer, setTimer] = useState<any>(5)\r\n\r\n    useEffect(() => {\r\n        const origin = window.location.origin\r\n        setInterval(() => {\r\n            setTimer(timer - 1)\r\n            if(timer === 1){\r\n                history.push('/profile')\r\n            }\r\n        }, 1000)  \r\n    }, [timer])\r\n\r\n    return (<div>\r\n        <h1>OK, its done!</h1>\r\n        you will be redirect to your profile in {timer}.\r\n    </div>)\r\n}\r\n\r\nexport default FormDone\r\n","import React, { useState, useEffect, FC } from 'react'\r\nimport './newPlannerForm.css'\r\nimport api from '../../api/api'\r\nimport { Link } from 'react-router-dom'\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport PlannerStart from '../newPlannerFormElements/plannerStart'\r\nimport AddParticipants from '../newPlannerFormElements/addParticipants'\r\nimport NewStage from '../newPlannerFormElements/NewStage'\r\nimport FormDone from '../newPlannerFormElements/FormDone'\r\n\r\nimport Header from '../header/header'\r\nimport SideBar from '../../components/sidebar/SideBar';\r\nimport { Button } from '@material-ui/core';\r\n\r\nfunction NewPlannerForm() {\r\n\r\n    const [startStage, setStartStage] =\r\n        useState<any>({ plannerDescription: '', plaannerName: '' })\r\n\r\n    const [addParticipantsStage, setAddParticipantsStage] = useState<any>([])\r\n    const [newStages, setNewStages] = useState<any>([])\r\n    const [currentStep, setCurrentStep] = useState<number>(0)\r\n    const [status, setStatus] = useState<boolean>(false)\r\n    const history = useHistory();\r\n\r\n    const formComponents = [\r\n        <PlannerStart stage={setCurrentStep}\r\n            formInfo={setStartStage} currentInfo={startStage} />,\r\n\r\n        <AddParticipants stage={setCurrentStep}\r\n            formInfo={setAddParticipantsStage} currentInfo={addParticipantsStage} />,\r\n\r\n        <NewStage step={setCurrentStep}\r\n            formInfo={setNewStages} currentInfo={newStages} status={setStatus} />,\r\n\r\n        <FormDone />\r\n    ]\r\n\r\n    function clearValues() {\r\n        setStartStage({ plannerDescription: '', plaannerName: '' })\r\n        setAddParticipantsStage([])\r\n        setNewStages([])\r\n        // setCurrentStep(0)\r\n        setStatus(false)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (status) {\r\n            api.post('/planner/new', {\r\n                params: {\r\n                    startStage: startStage,\r\n                    addParticipantsStage: addParticipantsStage,\r\n                    newStages: newStages\r\n                }\r\n            })\r\n                .then((data) => {\r\n                    clearValues()\r\n                })\r\n        }\r\n    }, [status])\r\n\r\n    function goTo(){\r\n        history.push('/profile')\r\n        document.location.reload(); \r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <Header />\r\n            <div className=\"newPlanner\">\r\n            <Button onClick={goTo} className=\"link\" >Profile</Button>\r\n\r\n                <div>{formComponents[currentStep]}</div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default NewPlannerForm\r\n","import React, { useContext, useEffect, useState } from 'react';\r\nimport './App.css'\r\nimport Login from './pages/auth/login/Login';\r\nimport Register from './pages/auth/register/Register';\r\nimport Planner from './pages/planner/Planner';\r\nimport InfoPage from './pages/info/infoPage'\r\nimport Profile from './pages/Profile/ProfilePage';\r\nimport Forgot from './pages/auth/ForgotPassword/Forgot'\r\nimport { HashRouter as Router, Switch, Route, Redirect } from 'react-router-dom'\r\nimport ProtectedRouter from './utils/ProtectedRouter';\r\nimport HomePage from './pages/homePage/HomePage';\r\nimport verifyAccount from './pages/auth/verifyAccount/verifyAccount';\r\nimport NewPlannerForm from './components/newPlannerForm/newPlannerForm'\r\n\r\nimport { UserContext } from './context/userContext'\r\nimport auth from './utils/auth'\r\n// import logout from './utils/logout';\r\n\r\n\r\nfunction App() {\r\n  const { userInfoContext, setUserInfoContext } = useContext(UserContext)\r\n\r\n  const [acess, setAcess] = useState();\r\n\r\n  useEffect(() => {\r\n\r\n    auth\r\n      .then((data) => {\r\n\r\n        if (!data.data.error) {\r\n          setUserInfoContext(data.data)\r\n          setAcess(true)\r\n        } else {\r\n          setAcess(false)\r\n        }\r\n      }).catch((data) => {\r\n        setAcess(false)\r\n      })\r\n\r\n  }, [setUserInfoContext])\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Router>\r\n        <Switch>\r\n\r\n          <ProtectedRouter path=\"/register\"\r\n            Comp={Register} isAuth={!acess} redirect=\"/\" />\r\n\r\n          <ProtectedRouter path=\"/login\"\r\n            Comp={Login} isAuth={!acess} redirect=\"/\" />\r\n\r\n          <ProtectedRouter path=\"/forgotpassword\"\r\n            Comp={Forgot} isAuth={!acess} redirect=\"/\" />\r\n\r\n          <ProtectedRouter path=\"/verifyAccount\"\r\n            Comp={verifyAccount} isAuth={!acess} redirect=\"/\" />\r\n\r\n          <ProtectedRouter path=\"/profile/newPlanner\"\r\n            Comp={NewPlannerForm} isAuth={true} redirect=\"/\" />\r\n\r\n          <Route path=\"/\" exact component={HomePage} />\r\n          <Route path=\"/profile\" exact component={Profile} />\r\n\r\n          <ProtectedRouter path=\"/planner/id=:id/info\"\r\n            Comp={InfoPage} isAuth={acess} redirect=\"/\" />\r\n\r\n          <ProtectedRouter path=\"/planner/id=:id\"\r\n            Comp={Planner} isAuth={acess} redirect=\"/\" />\r\n\r\n        </Switch>\r\n\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.jsx';\nimport reportWebVitals from './reportWebVitals';\nimport UserProvider from './context/userContext'\n\nReactDOM.render(\n    <UserProvider>\n\n      <App />\n    </UserProvider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}